{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.styles.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/LastNameItem/LastNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/NicknameItem/NicknameItem.tsx","components/common/selects/Select/Select.styles.ts","components/common/selects/Select/Select.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/LanguageItem/LanguageItem.tsx","constants/languages.ts","components/common/inputs/SuffixInput/SuffixInput.styles.ts","components/common/inputs/SuffixInput/SuffixInput.tsx","components/common/inputs/ClipboardInput/ClipboardInput.tsx","../node_modules/@ant-design/icons-svg/es/asn/FileTextOutlined.js","../node_modules/@ant-design/icons/es/icons/FileTextOutlined.js","components/common/inputs/OpenURLInput/OpenURLInput.tsx","components/common/icons/LinkedinIcon.tsx","components/common/icons/FacebookIcon.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/SocialLinksItem/SocialLinksItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo.tsx","pages/PersonalInfoPage.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","Row","gutter","wrap","Col","span","Button","block","type","onClick","htmlType","passwordPattern","RegExp","websitePattern","EmailItem","required","verified","name","$isSuccess","$successText","label","rules","message","Input","disabled","PhoneNumberInput","styled","PhoneInput","_templateObject","_taggedTemplateLiteral","BORDER_RADIUS","PhoneItem","validator","_","value","isValidPhoneNumber","Promise","resolve","reject","Error","S","FirstNameItem","LastNameItem","NicknameItem","Select","AntSelect","withConfig","shouldForwardProp","prop","includes","width","normalizeProp","FONT_WEIGHT","medium","shadow","FONT_SIZE","xs","Option","React","forwardRef","ref","getPopupContainer","triggerNode","languageOptions","id","title","countryCode","map","lang","Space","align","ReactCountryFlag","svg","alt","LanguageItem","Suffix","div","isVisible","SuffixInput","suffix","isVisibleSuffix","ClipboardInput","valueToCopy","handleCopy","useCallback","navigator","clipboard","writeText","then","notificationController","info","Tooltip","size","icon","CopyOutlined","FileTextOutlined","AntdIcon","_objectSpread","FileTextOutlinedSvg","RefIcon","OpenURLInput","href","target","isMatch","useMemo","test","LinkedinIcon","height","viewBox","fill","xmlns","d","FacebookIcon","SocialLinksItem","md","shouldUpdate","getFieldValue","twitter","addonBefore","TwitterOutlined","_ref2","linkedin","pattern","_ref3","facebook","initialPersonalInfoValues","firstName","lastName","nickName","sex","undefined","birthday","language","phone","email","country","city","address1","address2","zipcode","website","PersonalInfo","user","useAppSelector","state","useState","isLoading","setLoading","userFormValues","_user$socials","_user$socials2","_user$socials3","number","nickname","userName","Dates","getDate","socials","onFinish","values","setTimeout","success","console","log","Card","initialValues","onFieldsChange","xl","PersonalInfoPage","_Fragment","PageTitle"],"mappings":"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","file":"static/js/20.1feaf2b3.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { FormItemProps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface EmailItemProps extends FormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <Input disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport PhoneInput from 'react-phone-number-input/input';\nimport styled from 'styled-components';\n\nexport const PhoneNumberInput = styled(PhoneInput)`\n  height: 50px;\n  width: 100%;\n  padding: 8px 11px;\n  transition: all 0.3s;\n\n  color: var(--text-main-color);\n\n  border: 1px solid var(--border-color);\n\n  border-radius: ${BORDER_RADIUS};\n\n  &:hover {\n    border-color: #1d72b8;\n  }\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 2px rgb(0 89 171 / 20%);\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\n\ninterface PhoneItemsProps {\n  required?: boolean;\n  onClick?: () => void;\n  verified?: boolean;\n}\n\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        () => ({\n          validator(_, value) {\n            if (!value || isValidPhoneNumber(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n          },\n        }),\n      ]}\n    >\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const FirstNameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"firstName\" label={t('common.firstName')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const LastNameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"lastName\" label={t('common.lastName')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const NicknameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"nickname\" label={t('profile.nav.personalInfo.nickname')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { Select as AntSelect } from 'antd';\nimport { Dimension } from 'interfaces/interfaces';\nimport { normalizeProp } from 'utils/utils';\nimport { FONT_WEIGHT, BORDER_RADIUS, FONT_SIZE } from '@app/styles/themes/constants';\n\nexport interface SelectProps {\n  width?: Dimension;\n  shadow?: boolean;\n}\n\nexport const Select = styled(AntSelect).withConfig({\n  shouldForwardProp: (prop) => !['shadow', 'width'].includes(prop),\n})<SelectProps>`\n  width: ${(props) => props.width && normalizeProp(props.width)};\n\n  font-weight: ${FONT_WEIGHT.medium};\n\n  box-shadow: ${(props) => props.shadow && 'var(--box-shadow)'};\n\n  &.ant-select-borderless {\n    background: var(--secondary-background-color);\n\n    border-radius: ${BORDER_RADIUS};\n  }\n\n  .ant-select-selection-placeholder {\n    font-size: ${FONT_SIZE.xs};\n\n    color: var(--text-main-color);\n  }\n\n  .ant-select-arrow {\n    color: var(--text-main-color);\n  }\n\n  &.ant-select-multiple.ant-select-sm .ant-select-selection-item {\n    height: 0.875rem;\n    line-height: ${FONT_SIZE.xs};\n    font-size: ${FONT_SIZE.xs};\n    margin-top: 0.1875rem;\n    margin-bottom: 0.1875rem;\n  }\n\n  &.ant-select-disabled.ant-select:not(.ant-select-customize-input) .ant-select-selector {\n    color: var(--disabled-color);\n  }\n\n  .ant-select-clear {\n    color: var(--disabled-color);\n  }\n  .ant-select-selection-item-remove {\n    color: var(--icon-color);\n    &:hover {\n      color: var(--icon-hover-color);\n    }\n  }\n  .ant-select-item-option-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import React, { ComponentProps } from 'react';\nimport { Select as AntSelect } from 'antd';\nimport { RefSelectProps } from 'antd/lib/select';\nimport * as S from './Select.styles';\n\nexport const { Option } = AntSelect;\n\nexport interface SelectProps extends ComponentProps<typeof AntSelect>, S.SelectProps {\n  className?: string;\n}\n\nexport const Select = React.forwardRef<RefSelectProps, SelectProps>(({ className, width, children, ...props }, ref) => (\n  <S.Select getPopupContainer={(triggerNode) => triggerNode} ref={ref} className={className} width={width} {...props}>\n    {children}\n  </S.Select>\n));\n","import React from 'react';\nimport { Space } from 'antd';\nimport ReactCountryFlag from 'react-country-flag';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { languages } from '@app/constants/languages';\n\nconst languageOptions = languages.map((lang) => (\n  <Option key={lang.id} value={lang.name}>\n    <Space align=\"center\">\n      <ReactCountryFlag svg countryCode={lang.countryCode} alt=\"country flag\" />\n      {lang.title}\n    </Space>\n  </Option>\n));\n\nexport const LanguageItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"language\" label={t('profile.nav.personalInfo.language')}>\n      <Select>{languageOptions}</Select>\n    </BaseButtonsForm.Item>\n  );\n};\n","import { LanguageType } from '@app/interfaces/interfaces';\n\ninterface Language {\n  id: number;\n  name: LanguageType;\n  title: string;\n  countryCode: string;\n}\n\nexport const languages: Language[] = [\n  {\n    id: 1,\n    name: 'en',\n    title: 'English',\n    countryCode: 'gb',\n  },\n  {\n    id: 2,\n    name: 'de',\n    title: 'German',\n    countryCode: 'de',\n  },\n];\n","import styled from 'styled-components';\n\ninterface SuffixProps {\n  isVisible: boolean;\n}\n\nexport const Suffix = styled.div<SuffixProps>`\n  transition: all 0.5s ease;\n  visibility: visible;\n  opacity: 1;\n\n  ${(props) => !props.isVisible && 'opacity: 0; visibility: hidden'};\n`;\n","import React from 'react';\nimport { Input, InputProps } from '../Input/Input';\nimport * as S from './SuffixInput.styles';\n\nexport interface SuffixInputProps extends InputProps {\n  suffix: React.ReactNode;\n  isVisibleSuffix?: boolean;\n}\n\nexport const SuffixInput: React.FC<SuffixInputProps> = ({ suffix, isVisibleSuffix = true, ...props }) => (\n  <Input suffix={<S.Suffix isVisible={isVisibleSuffix}>{suffix}</S.Suffix>} {...props} />\n);\n","import React, { useCallback } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { InputProps } from '../Input/Input';\nimport { notificationController } from 'controllers/notificationController';\n\ninterface ClipboardInputProps extends InputProps {\n  valueToCopy?: string;\n}\n\nexport const ClipboardInput: React.FC<ClipboardInputProps> = ({ valueToCopy, ...props }) => {\n  const { t } = useTranslation();\n\n  const handleCopy = useCallback(\n    () =>\n      valueToCopy &&\n      navigator.clipboard.writeText(valueToCopy).then(() => {\n        notificationController.info({ message: t('common.copied') });\n      }),\n    [valueToCopy, t],\n  );\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.copy')}>\n          <Button size=\"small\" disabled={!valueToCopy} type=\"text\" icon={<CopyOutlined />} onClick={handleCopy} />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n","// This icon file is generated automatically.\nvar FileTextOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z\" } }] }, \"name\": \"file-text\", \"theme\": \"outlined\" };\nexport default FileTextOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileTextOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileTextOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar FileTextOutlined = function FileTextOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FileTextOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(FileTextOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'FileTextOutlined';\n}\nexport default RefIcon;","import React, { useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { useTranslation } from 'react-i18next';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { InputProps } from '../Input/Input';\nimport { websitePattern } from 'constants/patterns';\nimport { Button } from '@app/components/common/buttons/Button/Button';\n\ninterface OpenURLInputProps extends InputProps {\n  href?: string;\n  target?: string;\n}\n\nexport const OpenURLInput: React.FC<OpenURLInputProps> = ({ href, target = '_blank', ...props }) => {\n  const { t } = useTranslation();\n\n  const isMatch = useMemo(() => new RegExp(websitePattern).test(href || ' '), [href]);\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.openInNewTab')}>\n          <Button\n            size=\"small\"\n            href={href}\n            target={target}\n            disabled={!isMatch}\n            type=\"text\"\n            icon={<FileTextOutlined />}\n          />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n","import React from 'react';\n\nexport const LinkedinIcon: React.FC = () => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 17\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M3.75 1.84783C3.75 2.88261 2.925 3.69565 1.875 3.69565C0.825 3.69565 0 2.88261 0 1.84783C0 0.813043 0.825 0 1.875 0C2.925 0 3.75 0.813043 3.75 1.84783ZM3.75 5.17391H0V17H3.75V5.17391ZM9.75 5.17391H6V17H9.75V10.7913C9.75 7.31739 14.25 7.02174 14.25 10.7913V17H18V9.53478C18 3.69565 11.325 3.91739 9.75 6.8V5.17391Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const FacebookIcon: React.FC = () => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M2.25 5.33333H0V8H2.25V16H6V8H8.7L9 5.33333H6V4.2C6 3.6 6.15 3.33333 6.825 3.33333H9V0H6.15C3.45 0 2.25 1.06667 2.25 3.06667V5.33333Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { TwitterOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ClipboardInput } from 'components/common/inputs/ClipboardInput/ClipboardInput';\nimport { OpenURLInput } from '@app/components/common/inputs/OpenURLInput/OpenURLInput';\nimport { LinkedinIcon } from '@app/components/common/icons/LinkedinIcon';\nimport { FacebookIcon } from '@app/components/common/icons/FacebookIcon';\nimport { websitePattern } from '@app/constants/patterns';\n\nexport const SocialLinksItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item label={t('profile.nav.personalInfo.socialLinks')}>\n      <Row gutter={[20, 0]}>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const twitter = getFieldValue('twitter');\n\n              return (\n                <label>\n                  <BaseButtonsForm.Item name=\"twitter\">\n                    <ClipboardInput valueToCopy={twitter} addonBefore={<TwitterOutlined />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const linkedin = getFieldValue('linkedin');\n\n              return (\n                <label>\n                  <BaseButtonsForm.Item\n                    name=\"linkedin\"\n                    rules={[\n                      {\n                        pattern: new RegExp(websitePattern),\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\n                      },\n                    ]}\n                  >\n                    <OpenURLInput href={linkedin} target=\"_blank\" addonBefore={<LinkedinIcon />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const facebook = getFieldValue('facebook');\n\n              return (\n                <label>\n                  {' '}\n                  <BaseButtonsForm.Item\n                    name=\"facebook\"\n                    rules={[\n                      {\n                        pattern: new RegExp(websitePattern),\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\n                      },\n                    ]}\n                  >\n                    <OpenURLInput href={facebook} target=\"_blank\" addonBefore={<FacebookIcon />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n      </Row>\n    </BaseButtonsForm.Item>\n  );\n};\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row } from \"antd\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Card } from \"@app/components/common/Card/Card\";\nimport { FirstNameItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem\";\nimport { LastNameItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LastNameItem/LastNameItem\";\nimport { NicknameItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/NicknameItem/NicknameItem\";\nimport { LanguageItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LanguageItem/LanguageItem\";\nimport { PhoneItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem\";\nimport { EmailItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem\";\nimport { SocialLinksItem } from \"@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/SocialLinksItem/SocialLinksItem\";\nimport { useAppSelector } from \"@app/hooks/reduxHooks\";\nimport { Dates } from \"@app/constants/Dates\";\nimport { notificationController } from \"@app/controllers/notificationController\";\n\ninterface PersonalInfoFormValues {\n  birthday?: string;\n  lastName: string;\n  country?: string;\n  website: string;\n  city?: string;\n  address2: string;\n  nickName: string;\n  address1: string;\n  sex?: string;\n  facebook: string;\n  language?: string;\n  linkedin: string;\n  zipcode: string;\n  firstName: string;\n  twitter: string;\n  phone: string;\n  email: string;\n}\n\nconst initialPersonalInfoValues: PersonalInfoFormValues = {\n  firstName: \"\",\n  lastName: \"\",\n  nickName: \"\",\n  sex: undefined,\n  birthday: undefined,\n  language: undefined,\n  phone: \"\",\n  email: \"\",\n  country: undefined,\n  city: undefined,\n  address1: \"\",\n  address2: \"\",\n  zipcode: \"\",\n  website: \"\",\n  twitter: \"\",\n  linkedin: \"\",\n  facebook: \"\",\n};\n\nexport const PersonalInfo: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const userFormValues = useMemo(\n    () =>\n      user\n        ? {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email.name,\n            phone: user.phone.number,\n            nickname: user.userName,\n            sex: user.sex,\n            birthday: Dates.getDate(user.birthday),\n            language: user.lang,\n            country: user.country,\n            city: user.city,\n            address1: user.address1,\n            address2: user?.address2,\n            zipcode: user.zipcode,\n            website: user?.website,\n            twitter: user?.socials?.twitter,\n            linkedin: user?.socials?.linkedin,\n            facebook: user?.socials?.facebook,\n          }\n        : initialPersonalInfoValues,\n    [user]\n  );\n\n  const [form] = BaseButtonsForm.useForm();\n\n  const { t } = useTranslation();\n\n  const onFinish = useCallback(\n    (values: any) => {\n      // todo dispatch an action here\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        notificationController.success({ message: t(\"common.success\") });\n        console.log(values);\n      }, 1000);\n    },\n    [t]\n  );\n\n  return (\n    <Card>\n      <BaseButtonsForm\n        form={form}\n        name=\"info\"\n        loading={isLoading}\n        initialValues={userFormValues}\n        isFieldsChanged={isFieldsChanged}\n        setFieldsChanged={setFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        onFinish={onFinish}\n      >\n        <Row gutter={{ xs: 10, md: 15, xl: 30 }}>\n          <Col span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>\n                {t(\"profile.nav.personalInfo.title\")}\n              </BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n\n          <Col xs={24} md={12}>\n            <FirstNameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <LastNameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <NicknameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <LanguageItem />\n          </Col>\n\n          <Col span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>\n                {t(\"profile.nav.personalInfo.contactInfo\")}\n              </BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n\n          <Col xs={24} md={12}>\n            <PhoneItem verified={user?.phone.verified} />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <EmailItem verified={user?.email.verified} />\n          </Col>\n\n          <Col span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>\n                {t(\"common.address\")}\n              </BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n\n          <Col span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>\n                {t(\"profile.nav.personalInfo.otherInfo\")}\n              </BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n\n          <Col span={24}>\n            <SocialLinksItem />\n          </Col>\n        </Row>\n      </BaseButtonsForm>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PersonalInfo } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst PersonalInfoPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.personalInfo.title')}</PageTitle>\n      <PersonalInfo />\n    </>\n  );\n};\n\nexport default PersonalInfoPage;\n"],"sourceRoot":""}