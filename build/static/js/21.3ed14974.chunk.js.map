{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.styles.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.tsx","components/common/Radio/Radio.styles.ts","components/common/Radio/Radio.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings.tsx","pages/SecuritySettingsPage.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","Row","gutter","wrap","Col","span","Button","block","type","onClick","htmlType","passwordPattern","RegExp","websitePattern","EmailItem","required","verified","name","$isSuccess","$successText","label","rules","message","Input","disabled","PhoneNumberInput","styled","PhoneInput","_templateObject","_taggedTemplateLiteral","BORDER_RADIUS","PhoneItem","validator","_","value","isValidPhoneNumber","Promise","resolve","reject","Error","S","ConfirmItemPassword","dependencies","getFieldValue","InputPassword","CurrentPasswordItem","NewPasswordItem","pattern","Btn","media","md","xl","PasswordForm","useState","isLoading","setLoading","requiredMark","onFieldsChange","onFinish","values","setTimeout","notificationController","success","console","log","xs","Radio","AntdRadio","Group","RadioGroup","_templateObject2","RadioBtn","$isActive","TwoFactorOptions","selectedOption","setSelectedOption","user","useAppSelector","state","isEmailActive","isPhoneActive","useMemo","onClickInput","useCallback","mode","useEffect","email","phone","_Fragment","onChange","e","target","TwoFactorSwitch","isEnabled","setEnabled","justify","align","Switch","checked","AuthModal","Modal","TwoFactorAuth","isNeedToShowVerifyBtn","number","Boolean","isClickedVerify","setClickedVerify","dispatch","useAppDispatch","onVerify","newUser","setUser","initialValues","onClickVerify","destroyOnClose","visible","closable","SecurityCodeForm","onBack","SecuritySettings","Card","SecuritySettingsPage","PageTitle"],"mappings":"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","file":"static/js/21.3ed14974.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { FormItemProps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface EmailItemProps extends FormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <Input disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport PhoneInput from 'react-phone-number-input/input';\nimport styled from 'styled-components';\n\nexport const PhoneNumberInput = styled(PhoneInput)`\n  height: 50px;\n  width: 100%;\n  padding: 8px 11px;\n  transition: all 0.3s;\n\n  color: var(--text-main-color);\n\n  border: 1px solid var(--border-color);\n\n  border-radius: ${BORDER_RADIUS};\n\n  &:hover {\n    border-color: #1d72b8;\n  }\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 2px rgb(0 89 171 / 20%);\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\n\ninterface PhoneItemsProps {\n  required?: boolean;\n  onClick?: () => void;\n  verified?: boolean;\n}\n\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        () => ({\n          validator(_, value) {\n            if (!value || isValidPhoneNumber(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n          },\n        }),\n      ]}\n    >\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const ConfirmItemPassword: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"confirmPassword\"\n      label={t('profile.nav.securitySettings.confirmPassword')}\n      dependencies={['newPassword']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const CurrentPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"password\"\n      label={t('profile.nav.securitySettings.currentPassword')}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { passwordPattern } from '@app/constants/patterns';\n\nexport const NewPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"newPassword\"\n      label={t('profile.nav.securitySettings.newPassword')}\n      dependencies={['password']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        {\n          pattern: passwordPattern,\n          message: t('profile.nav.securitySettings.notValidPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') !== value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { Button } from '@app/components/common/buttons/Button/Button';\nimport { media } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\nexport const Btn = styled(Button)`\n  margin: 0.5rem 0 1.5rem 0;\n  width: 100%;\n\n  @media only screen and ${media.md} {\n    max-width: 10rem;\n  }\n\n  @media only screen and ${media.xl} {\n    max-width: unset;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ConfirmItemPassword } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem';\nimport { CurrentPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem';\nimport { NewPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './PasswordForm.styles';\n\nexport const PasswordForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      name=\"newPassword\"\n      requiredMark=\"optional\"\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      footer={\n        <S.Btn loading={isLoading} type=\"primary\" htmlType=\"submit\">\n          {t('common.confirm')}\n        </S.Btn>\n      }\n      onFinish={onFinish}\n    >\n      <Row gutter={{ md: 15, xl: 30 }}>\n        <Col span={24}>\n          <BaseButtonsForm.Item>\n            <BaseButtonsForm.Title>{t('profile.nav.securitySettings.changePassword')}</BaseButtonsForm.Title>\n          </BaseButtonsForm.Item>\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <CurrentPasswordItem />\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <NewPasswordItem />\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <ConfirmItemPassword />\n        </Col>\n      </Row>\n    </BaseButtonsForm>\n  );\n};\n","import styled from 'styled-components';\nimport { Radio as AntdRadio } from 'antd';\n\nexport const Radio = styled(AntdRadio)`\n  .ant-radio-disabled + span {\n    color: var(--disabled-color);\n  }\n`;\n\nexport const RadioButton = styled(AntdRadio.Button)`\n  &.ant-radio-button-wrapper-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import { Radio as AntdRadio, RadioProps } from 'antd';\nimport * as S from './Radio.styles';\n\nexport interface RadioChangeEventTarget extends RadioProps {\n  checked: boolean;\n}\nexport interface RadioChangeEvent {\n  target: RadioChangeEventTarget;\n  stopPropagation: () => void;\n  preventDefault: () => void;\n  nativeEvent: MouseEvent;\n}\n\nexport const { Group: RadioGroup } = AntdRadio;\n\nexport const Radio: React.FC<RadioProps> = (props) => {\n  return <S.Radio {...props} />;\n};\n\nexport const RadioButton: React.FC<RadioProps> = (props) => {\n  return <S.RadioButton {...props} />;\n};\n","import styled from 'styled-components';\nimport { Radio } from '@app/components/common/Radio/Radio';\n\ninterface RadioBtnProps {\n  $isActive: boolean;\n}\n\nexport const RadioBtn = styled(Radio)<RadioBtnProps>`\n  margin-right: 0;\n  width: 100%;\n  transition: all 0.5s ease;\n\n  ${(props) => !props.$isActive && 'opacity: 0.5'};\n\n  & > span:last-of-type {\n    flex-grow: 1;\n  }\n`;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { RadioGroup } from '@app/components/common/Radio/Radio';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport { TwoFactorAuthOptionState } from '../TwoFactorAuth';\nimport * as S from './TwoFactorOptions.styles';\n\ninterface TwoFactorOptionsProps {\n  selectedOption: TwoFactorAuthOptionState;\n  setSelectedOption: (state: TwoFactorAuthOptionState) => void;\n}\n\nexport const TwoFactorOptions: React.FC<TwoFactorOptionsProps> = ({ selectedOption, setSelectedOption }) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const { isEmailActive, isPhoneActive } = useMemo(\n    () => ({\n      isPhoneActive: selectedOption === 'phone',\n      isEmailActive: selectedOption === 'email',\n    }),\n    [selectedOption],\n  );\n\n  const onClickInput = useCallback(\n    (mode: TwoFactorAuthOption) => () => {\n      setSelectedOption(mode);\n    },\n    [setSelectedOption],\n  );\n\n  useEffect(() => {\n    if (user?.email.verified && user?.phone.verified) {\n      setSelectedOption(null);\n    }\n  }, [setSelectedOption, user?.email.verified, user?.phone.verified]);\n\n  return (\n    <>\n      <RadioGroup value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)}>\n        <S.RadioBtn value=\"phone\" $isActive={isPhoneActive} disabled={user?.phone.verified}>\n          <PhoneItem required={isPhoneActive} onClick={onClickInput('phone')} verified={user?.phone.verified} />\n        </S.RadioBtn>\n        <S.RadioBtn value=\"email\" $isActive={isEmailActive} disabled={user?.email.verified}>\n          <EmailItem required={isEmailActive} onClick={onClickInput('email')} verified={user?.email.verified} />\n        </S.RadioBtn>\n      </RadioGroup>\n    </>\n  );\n};\n","import React from 'react';\nimport { Col, Row, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface TwoFactorSwitchProps {\n  isEnabled: boolean;\n  setEnabled: (state: boolean) => void;\n}\n\nexport const TwoFactorSwitch: React.FC<TwoFactorSwitchProps> = ({ isEnabled, setEnabled }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item>\n      <Row gutter={[10, 10]} justify=\"space-between\" align=\"middle\">\n        <Col span={20}>\n          <BaseButtonsForm.Title>{t('profile.nav.securitySettings.twoFactorAuth')}</BaseButtonsForm.Title>\n        </Col>\n        <Col span={4}>\n          <Row justify=\"end\">\n            <Col>\n              <BaseButtonsForm.Item name=\"2fa\">\n                <Switch checked={isEnabled} onChange={setEnabled} />\n              </BaseButtonsForm.Item>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { Modal } from '@app/components/common/Modal/Modal';\n\nexport const AuthModal = styled(Modal)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport * as S from './TwoFactorAuth.styles';\n\nexport interface CurrentOption {\n  value: 'phone' | 'email';\n  isVerified: boolean;\n}\n\nexport type TwoFactorAuthOptionState = TwoFactorAuthOption | null;\n\nexport const TwoFactorAuth: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const isNeedToShowVerifyBtn = useMemo(\n    () => (user?.email.name && !user?.email.verified) || (user?.phone.number && !user?.phone.verified),\n    [user],\n  );\n\n  const [isFieldsChanged, setFieldsChanged] = useState(Boolean(isNeedToShowVerifyBtn));\n  const [isLoading, setLoading] = useState(false);\n\n  const [isEnabled, setEnabled] = useState(Boolean(user?.email.verified || user?.phone.verified));\n  const [selectedOption, setSelectedOption] = useState<TwoFactorAuthOptionState>('email');\n  const [isClickedVerify, setClickedVerify] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation();\n\n  const onClickVerify = () => {\n    setClickedVerify(true);\n  };\n\n  const onVerify = useCallback(() => {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({ message: t('common.success') });\n\n      const newUser = { ...user, [selectedOption]: { ...user[selectedOption], verified: true } };\n\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n\n  return (\n    <>\n      <BaseButtonsForm\n        name=\"twoFactorAuth\"\n        requiredMark=\"optional\"\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        initialValues={{\n          email: user?.email.name,\n          phone: user?.phone.number,\n        }}\n        footer={\n          (isEnabled && (\n            <Button type=\"link\" loading={isLoading} htmlType=\"submit\">\n              {t('profile.nav.securitySettings.verify')}\n            </Button>\n          )) || <span />\n        }\n        onFinish={onClickVerify}\n      >\n        <Row>\n          <Col span={24}>\n            <TwoFactorSwitch isEnabled={isEnabled} setEnabled={setEnabled} />\n          </Col>\n\n          {isEnabled && (\n            <Col span={24}>\n              <TwoFactorOptions selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n            </Col>\n          )}\n        </Row>\n      </BaseButtonsForm>\n      <S.AuthModal\n        destroyOnClose\n        visible={isClickedVerify}\n        footer={false}\n        closable={false}\n        onCancel={() => setClickedVerify(false)}\n      >\n        <SecurityCodeForm onBack={() => setClickedVerify(false)} onFinish={onVerify} />\n      </S.AuthModal>\n    </>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { Card } from 'components/common/Card/Card';\nimport { PasswordForm } from './passwordForm/PasswordForm/PasswordForm';\nimport { TwoFactorAuth } from './twoFactorAuth/TwoFactorAuth';\n\nexport const SecuritySettings: React.FC = () => (\n  <Card>\n    <Row gutter={[30, 0]}>\n      <Col xs={24} xl={10}>\n        <PasswordForm />\n      </Col>\n\n      <Col xs={24} xl={14}>\n        <TwoFactorAuth />\n      </Col>\n    </Row>\n  </Card>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SecuritySettings } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst SecuritySettingsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.securitySettings.title')}</PageTitle>\n      <SecuritySettings />\n    </>\n  );\n};\n\nexport default SecuritySettingsPage;\n"],"sourceRoot":""}