{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","api/files.ts","components/common/Upload/Upload.styles.ts","pages/managmentPages/UploadedCards/UploadComponent.tsx","components/common/Spinner/Spinner.styles.ts","components/common/Spinner/Spinner.tsx","pages/managmentPages/UploadedCards/UploadedImageCard.tsx","pages/managmentPages/UploadedForms/ImagesForm.tsx","pages/managmentPages/UploadedCards/UploadVideoCard.tsx","pages/managmentPages/UploadedForms/VideoForm.tsx","pages/managmentPages/UploadedCards/UploadFileCard.tsx","pages/managmentPages/UploadedForms/FilesForm.tsx","pages/managmentPages/PageSetting.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","Row","gutter","wrap","Col","span","Button","block","type","onClick","htmlType","DeleteAttachment","async","axios","delete","concat","id","EditAttachment","fileId","title","description","put","Upload","styled","AntdUpload","_templateObject","_taggedTemplateLiteral","UploadComponent","allowedTypes","onChange","label","fileList","name","multiple","action","listType","showUploadList","icon","UploadOutlined","Spinner","Spin","S","UploadedImageCard","filePath","onFinish","onDelete","uid","index","getChildData","url","isDisable","setIsDisable","useState","setIsFieldsChanged","setFileId","isDeleteVisible","setIsDeleteVisible","isLoading","setIsLoading","deleteAttachmentMutation","useMutation","editAttachmentMutation","_ref2","onSuccess","message","success","onError","error","console","spinning","initialValues","onFieldsChange","handleFieldChange","validateFields","then","values","catch","justify","style","width","margin","handleEditSubmission","getFieldsValue","mutateAsync","_Fragment","Card","position","borderRadius","bodyStyle","padding","top","right","zIndex","CheckOutlined","color","border","background","handleEdit","DeleteOutlined","borderColor","Image","alt","src","preview","height","Input","disabled","placeholder","TextArea","Modal","centered","visible","onOk","finally","size","formItemLayout","labelCol","wrapperCol","ImagesForm","imagesList","newImagesList","handleUploadImages","handleDeleteImageCard","handeSubmissionImages","setNewImagesList","handleChildData","data","prevList","updatedList","marginTop","length","align","Typography","map","item","_id","Paragraph","ReactPlayer","_ReactPlayer","UploadVideoCard","cardLabel","controls","aspectRatio","objectFit","initialValue","VideoForm","handeSubmissionVideos","handleUploadVideos","setNewVideosList","newVideosList","handleDeleteVideoCard","videosList","setLoading","UploadFilesCard","display","Link","to","target","PdfImg","FilesForm","handeSubmissionFiles","filesList","setNewFilesList","handleUploadFiles","newFilesList","handleDeleteFileCard","marginBottom","PageSettingPage","pageId","useParams","setImagesList","setVideosList","setFilesList","isEditing","setEditing","isDeleting","setDeleting","attachmentByPageId","refetch","useQuery","get","GetAttachmentByPageId","_data$data","response","images","filter","fileType","includes","videos","files","onSettled","uploadAttachment","post","file","UploadAttachment","handleFileUpload","setNewList","info","forEach","reader","FileReader","onload","updatedItem","result","prevState","newList","readAsDataURL","originFileObj","handleSubmission","list","promises","formData","FormData","append","Promise","all","handleDelete","setTimeout","PageTitle","Divider"],"mappings":"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","file":"static/js/23.2c8118a2.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import { httpApi } from \"./http.api\";\nimport axios from \"axios\";\n\nconst baseURL = `/files`;\n\nconst GetAttachments = async (\n  files: string,\n  limit: number,\n  keyword: string\n) => {\n  // return await httpApi.get(`${baseURL}?files=${files}&limit=${limit}&keyword=${keyword}`)\n  return await axios.get(\n    `https://eabir-backend.onrender.com/api/v1/files?files=${files}&limit=${limit}&keyword=${keyword}`\n  );\n};\n\nconst UploadAttachment = async (file: FormData) => {\n  // return await httpApi.post(`${baseURL}`, {\n  //   file,\n  // });\n  return await axios.post(\n    \"https://eabir-backend.onrender.com/api/v1/files\",\n    file\n  );\n};\n\nconst UpdateAttachment = async (id: string, name: string) => {\n  return await axios.put(\n    `https://eabir-backend.onrender.com/api/v1/pages/${id}`,\n    { name }\n  );\n};\n\nconst GetAttachmentById = async (id: string) => {\n  // return await httpApi.get(`${baseURL}/${id}`)\n  return await axios.get(\n    `https://eabir-backend.onrender.com/api/v1/files/${id}`\n  );\n};\n\nconst GetAttachmentByPageId = async (pageId: string) => {\n  // return await httpApi.get(`${baseURL}/${pageId}`)\n  return await axios.get(\n    `https://eabir-backend.onrender.com/api/v1/files/page/${pageId}`\n  );\n};\n\nconst DeleteAttachment = async (id: string) => {\n  return await axios.delete(\n    `https://eabir-backend.onrender.com/api/v1/files/${id}`\n  );\n};\n\nconst EditAttachment = async (\n  fileId: string,\n  title: string,\n  description?: string\n) => {\n  return await axios.put(\n    `https://eabir-backend.onrender.com/api/v1/files/${fileId}`,\n    { title }\n  );\n};\n\nexport {\n  GetAttachments,\n  UploadAttachment,\n  GetAttachmentById,\n  GetAttachmentByPageId,\n  DeleteAttachment,\n  UpdateAttachment,\n  EditAttachment,\n};\n","import styled from 'styled-components';\nimport { Upload as AntdUpload } from 'antd';\n\nexport const Upload = styled(AntdUpload)``;\n","import { UploadOutlined } from \"@ant-design/icons\";\nimport { Button } from \"@app/components/common/buttons/Button/Button.styles\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Upload } from \"@app/components/common/Upload/Upload.styles\";\nimport { message } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface UploadComponentProps {\n  accept?: string;\n  onChange: any;\n  label: string;\n  allowedTypes?: string[];\n  fileList?: any;\n}\n\nconst UploadComponent = ({\n  allowedTypes,\n  onChange,\n  label,\n  fileList,\n}: UploadComponentProps) => {\n  //   const allowedTypes = [\"video/mp4\", \"video/webm\", \"video/ogg\"];\n\n  // const handleBeforeUpload = (file: any) => {\n  //   const isAllowedType = allowedTypes.includes(file.type);\n  //   if (!isAllowedType) {\n  //     message.error(`You can only upload ${allowedTypes.join(\", \")} videos.`);\n  //   }\n  //   return isAllowedType;\n  // };\n\n  const { t } = useTranslation();\n  return (\n    <BaseButtonsForm.Item name=\"uploadImage\">\n      <Upload\n        multiple\n        action={\"http://localhost:3000/\"}\n        listType=\"picture\"\n        // accept={accept}\n        fileList={fileList}\n        // beforeUpload={handleBeforeUpload}\n        showUploadList={false}\n        // beforeUpload={handleUpload}\n        onChange={onChange}\n      >\n        <Button icon={<UploadOutlined />}>{label}</Button>\n      </Upload>\n    </BaseButtonsForm.Item>\n  );\n};\n\nexport default UploadComponent;\n","import styled from 'styled-components';\nimport { Spin } from 'antd';\n\nexport const Spinner = styled(Spin)``;\n","import { SpinProps } from 'antd';\nimport * as S from './Spinner.styles';\n\nexport const Spinner: React.FC<SpinProps> = (props) => {\n  return <S.Spinner {...props} />;\n};\n","import React, { useState } from \"react\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Card, Button, Image, Input, message, Row, Col } from \"antd\";\nimport { Modal } from \"@app/components/common/Modal/Modal\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useMutation } from \"react-query\";\nimport { DeleteAttachment, EditAttachment } from \"@app/api/files\";\nimport { useTranslation } from \"react-i18next\";\nimport { TextArea } from \"@app/components/common/inputs/Input/Input\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner.styles\";\nimport { CheckOutlined } from \"@ant-design/icons\";\n\ninterface UploadedImageCardProps {\n  title?: string;\n  filePath: string;\n  description?: string;\n  id?: string;\n  onFinish?: any;\n  onDelete?: (attachmentId: string) => void;\n  uid?: string;\n  index?: number;\n  getChildData?: (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => void;\n}\n\nconst UploadedImageCard = ({\n  title,\n  filePath,\n  description,\n  id,\n  onFinish,\n  onDelete,\n  uid,\n  index,\n  getChildData,\n}: UploadedImageCardProps) => {\n  const { t } = useTranslation();\n  const url = `https://eabir-backend.onrender.com${filePath}`;\n  const [form] = BaseButtonsForm.useForm();\n  const [isDisable, setIsDisable] = useState<boolean>(!!id);\n  const [isFieldsChanged, setIsFieldsChanged] = useState<boolean>(false);\n  const [fileId, setFileId] = useState<string>(\"\");\n  const [isDeleteVisible, setIsDeleteVisible] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const deleteAttachmentMutation = useMutation((id: string) =>\n    DeleteAttachment(id)\n  );\n\n  const editAttachmentMutation = useMutation(\n    ({\n      id,\n      title,\n      description,\n    }: {\n      id: string;\n      title: string;\n      description?: string;\n    }) => EditAttachment(id, title, description),\n    {\n      onSuccess: () => {\n        setIsFieldsChanged(false);\n        setIsDisable(true);\n        message.success(\"Attachment edited successfully\");\n      },\n      onError: (error) => {\n        console.error(\"Error editing attachment:\", error);\n        message.error(\"Error editing attachment\");\n      },\n    }\n  );\n\n  const handleEditSubmission = () => {\n    const { title, description } = form.getFieldsValue();\n    if (fileId) {\n      editAttachmentMutation.mutateAsync({ id: fileId, title, description });\n    }\n  };\n\n  const handleDelete = (id: any, uid: any) => {\n    if (id) {\n      deleteAttachmentMutation\n        .mutateAsync(id)\n        .then(() => {\n          message.success(\"Attachment deleted successfully\");\n        })\n        .catch((error) => {\n          message.error(`Error deleting attachment: ${error}`);\n        });\n    } else {\n      onDelete?.(uid!);\n    }\n  };\n\n  const handleEdit = (id: string) => {\n    setIsFieldsChanged(true);\n    setFileId(id);\n    setIsDisable(false);\n  };\n\n  const handleFieldChange = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        getChildData?.(index!, values);\n      })\n      .catch((error) => {\n        console.error(\"Validation failed:\", error);\n      });\n  };\n\n  return (\n    <Spinner spinning={isLoading}>\n      <BaseButtonsForm\n        isFieldsChanged={isFieldsChanged}\n        form={form}\n        initialValues={{ title, description }}\n        onFieldsChange={handleFieldChange}\n        footer={\n          fileId ? (\n            <Row justify=\"center\" style={{ width: \"90%\", margin: \"auto\" }}>\n              <Col span={12}>\n                <Button\n                  type=\"default\"\n                  style={{ width: \"98%\", margin: \"0.5rem\" }}\n                  onClick={() => setIsDisable(true)}\n                >\n                  {t(\"common.cancel\")}\n                </Button>\n              </Col>\n              <Col span={12}>\n                <Button\n                  type=\"primary\"\n                  style={{ width: \"98%\", margin: \"0.5rem\" }}\n                  onClick={handleEditSubmission}\n                >\n                  {t(\"common.save\")}\n                </Button>\n              </Col>\n            </Row>\n          ) : (\n            <></>\n          )\n        }\n      >\n        <Card\n          style={{\n            width: \"300px\",\n            margin: \"auto 1rem\",\n            position: \"relative\",\n            borderRadius: \"10px\",\n          }}\n          bodyStyle={{\n            padding: \"0\",\n          }}\n        >\n          <Row\n            justify=\"end\"\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"5px\",\n              zIndex: 2,\n            }}\n          >\n            {id && (\n              <Button\n                icon={<CheckOutlined color=\"green\" />}\n                style={{\n                  margin: \"0 0.2rem 0.5rem 0.2rem\",\n                  border: \"1px solid green\",\n                  borderRadius: \"50%\",\n                  background: \"transparent\",\n                }}\n                onClick={() => handleEdit(id ?? \"\")}\n              />\n            )}\n            <Button\n              icon={<DeleteOutlined style={{ color: \"red\" }} />}\n              style={{\n                margin: \"0 0.2rem 0.5rem 0.2rem\",\n                borderColor: \"red\",\n                border: \"1px solid red\",\n                borderRadius: \"50%\",\n                background: \"transparent\",\n              }}\n              onClick={() => setIsDeleteVisible(true)}\n            />\n          </Row>\n\n          <Image\n            alt=\"Image\"\n            src={id ? url : filePath}\n            preview={false}\n            style={{\n              height: \"240px\",\n              width: \"297px\",\n              borderRadius: \"10px 10px 0px 0px\",\n            }}\n          />\n          <Row style={{ padding: \"0.4rem\", width: \"100%\" }}>\n            <BaseButtonsForm.Item name=\"title\" style={{ width: \"100%\" }}>\n              <Input disabled={isDisable} placeholder=\"Title\" />\n            </BaseButtonsForm.Item>\n            <BaseButtonsForm.Item name=\"description\" style={{ width: \"100%\" }}>\n              <TextArea disabled={isDisable} placeholder=\"Description\" />\n            </BaseButtonsForm.Item>\n          </Row>\n        </Card>\n        <div>\n          <Modal\n            title={t(\"common.DeleteModal\")}\n            centered\n            visible={isDeleteVisible}\n            onOk={() => {\n              setIsLoading(true);\n\n              if (id) {\n                deleteAttachmentMutation\n                  .mutateAsync(id)\n                  .then(() => {\n                    message.success(\"Attachment deleted successfully\");\n                  })\n                  .catch((error) => {\n                    message.error(`Error deleting attachment: ${error}`);\n                  })\n                  .finally(() => setIsLoading(false));\n              } else {\n                onDelete?.(uid!);\n              }\n              setIsDeleteVisible(false);\n            }}\n            onCancel={() => setIsDeleteVisible(false)}\n            size=\"small\"\n          >\n            <p>{t(\"modals.deleteEnsureMessage\")}</p>\n          </Modal>\n        </div>\n      </BaseButtonsForm>\n    </Spinner>\n  );\n};\n\nexport default UploadedImageCard;\n","import React, { useState } from \"react\";\nimport { Row, Card, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Button } from \"@app/components/common/buttons/Button/Button\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport UploadComponent from \"@app/pages/managmentPages/UploadedCards/UploadComponent\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner\";\nimport UploadedImageCard from \"@app/pages/managmentPages/UploadedCards/UploadedImageCard\";\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface ImagesFormProps {\n  imagesList: any[];\n  newImagesList: any[];\n  setNewImagesList: any;\n  loading: boolean;\n  handleUploadImages: (info: any) => void;\n  handeSubmissionImages: () => void;\n  handleDeleteImageCard: (uid: string) => void;\n  onFinish: () => void;\n}\n\nexport const ImagesForm = ({\n  imagesList,\n  newImagesList,\n  handleUploadImages,\n  handleDeleteImageCard,\n  handeSubmissionImages,\n  onFinish,\n  setNewImagesList,\n  loading,\n}: ImagesFormProps) => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const { t } = useTranslation();\n  const [form] = BaseForm.useForm();\n\n  const handleChildData = (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => {\n    setNewImagesList((prevList: any) => {\n      const updatedList = [...prevList];\n      updatedList[index] = { ...updatedList[index], ...data };\n      return updatedList;\n    });\n  };\n\n  return (\n    <>\n      <Spinner spinning={loading}>\n        <BaseButtonsForm\n          form={form}\n          {...formItemLayout}\n          isFieldsChanged={isFieldsChanged}\n          onFieldsChange={() => setFieldsChanged(true)}\n          name=\"imagesForm\"\n          initialValues={{}}\n          footer={\n            <BaseButtonsForm.Item style={{ marginTop: \"0.5rem\" }}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={newImagesList.length === 0}\n                loading={loading}\n              >\n                {t(\"common.submit\")}\n              </Button>\n            </BaseButtonsForm.Item>\n          }\n          onFinish={handeSubmissionImages}\n        >\n          <Row align=\"middle\" justify=\"space-between\">\n            <Typography.Title>Images</Typography.Title>\n            <UploadComponent\n              label=\"Click to upload Image\"\n              onChange={handleUploadImages}\n              fileList={newImagesList}\n            />\n          </Row>\n          {newImagesList.length > 0 || imagesList.length > 0 ? (\n            <Card\n              style={{\n                background: \"var(--shadow-color)\",\n                border: \"none\",\n              }}\n            >\n              <Row gutter={[10, 20]}>\n                {newImagesList.map((item, index) => (\n                  <UploadedImageCard\n                    key={item.uid}\n                    filePath={item.url}\n                    onDelete={handleDeleteImageCard}\n                    uid={item.uid}\n                    index={index}\n                    getChildData={handleChildData}\n                  />\n                ))}\n                {imagesList.map((item) => (\n                  <UploadedImageCard\n                    key={item._id}\n                    title={item.title}\n                    filePath={item.filePath}\n                    description={item.description}\n                    id={item._id}\n                  />\n                ))}\n              </Row>\n            </Card>\n          ) : (\n            <Row justify=\"center\">\n              <Typography.Paragraph>\n                No Uploaded Images Yet\n              </Typography.Paragraph>\n            </Row>\n          )}\n        </BaseButtonsForm>\n      </Spinner>\n    </>\n  );\n};\n","import { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport React, { useState } from \"react\";\nimport { Card } from \"@app/components/common/Card/Card\";\nimport { Button, Col, Image, Input, message, Row } from \"antd\";\nimport { CheckOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { useTranslation } from \"react-i18next\";\nimport { TextArea } from \"@app/components/common/inputs/Input/Input\";\nimport { useMutation } from \"react-query\";\nimport {\n  DeleteAttachment,\n  EditAttachment,\n  UploadAttachment,\n} from \"@app/api/files\";\n// import ReactPlayer from \"react-player\";\nimport { default as _ReactPlayer } from \"react-player/lazy\";\nimport { ReactPlayerProps } from \"react-player/types/lib\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner.styles\";\nimport { Modal } from \"@app/components/common/Modal/Modal\";\n\nconst ReactPlayer = _ReactPlayer as unknown as React.FC<ReactPlayerProps>;\n\ninterface UploadVideoCardProps {\n  title?: string;\n  filePath: string;\n  description?: string;\n  id?: string;\n  onFinish?: any;\n  cardLabel?: string;\n  onDelete?: (attachmentId: string) => void; // Add a callback function\n  uid?: string;\n  type?: string;\n  index?: number;\n  getChildData?: (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => void;\n}\nconst UploadVideoCard = ({\n  title,\n  filePath,\n  description,\n  id,\n  cardLabel,\n  onFinish,\n  onDelete,\n  uid,\n  type,\n  getChildData,\n  index,\n}: UploadVideoCardProps) => {\n  const { t } = useTranslation();\n  const url = `https://eabir-backend.onrender.com${filePath}`;\n  const [form] = BaseForm.useForm();\n  const [isDisable, setIsDisable] = useState<boolean>(!!id);\n  const [isFieldsChanged, setIsFieldsChanged] = useState<boolean>(false);\n  const [fileId, setFileId] = useState<string>(\"\");\n  const [isDeleteVisible, setIsDeleteVisible] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleSubmit = () => {\n    form.submit();\n  };\n\n  const deleteAttachmentMutation = useMutation((id: string) =>\n    DeleteAttachment(id)\n  );\n\n  const handleDelete = (id: any, uid: any) => {\n    if (id) {\n      deleteAttachmentMutation\n        .mutateAsync(id)\n        .then(() => {\n          message.success(\"Attachment deleted successfully\");\n        })\n        .catch((error) => {\n          message.error(\"Error deleting attachment:\", error);\n        });\n    } else {\n      onDelete?.(uid);\n    }\n  };\n\n  const editAttachmentMutation = useMutation(\n    ({\n      id,\n      title,\n      description,\n    }: {\n      id: string;\n      title: string;\n      description?: string;\n    }) => EditAttachment(id, title, description),\n    {\n      onSuccess: () => {\n        setIsFieldsChanged(false);\n        setIsDisable(true);\n        message.success(\"Attachment edited successfully\");\n      },\n      onError: (error) => {\n        console.error(\"Error editing attachment:\", error);\n        message.error(\"Error editing attachment\");\n      },\n    }\n  );\n\n  const handleEditSubmission = () => {\n    const { title, description } = form.getFieldsValue();\n    if (fileId) {\n      editAttachmentMutation.mutateAsync({ id: fileId, title, description });\n    }\n  };\n\n  const handleEdit = (id: string) => {\n    setIsDisable(false);\n    setIsFieldsChanged(true);\n    setFileId(id);\n  };\n\n  const handleFieldChange = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        getChildData?.(index!, values);\n      })\n      .catch((error) => {\n        console.error(\"Validation failed:\", error);\n      });\n  };\n\n  return (\n    <Spinner spinning={isLoading}>\n      <BaseButtonsForm\n        isFieldsChanged={isFieldsChanged}\n        form={form}\n        onFinish={onFinish}\n        initialValues={{ title, description }}\n        onFieldsChange={handleFieldChange}\n        footer={\n          fileId ? (\n            <Row justify=\"center\" style={{ width: \"90%\", margin: \"auto\" }}>\n              <Col span={12}>\n                <Button\n                  type=\"default\"\n                  style={{ width: \"98%\", margin: \"0.5rem\" }}\n                  onClick={() => setIsDisable(true)}\n                >\n                  {t(\"common.cancel\")}\n                </Button>\n              </Col>\n              <Col span={12}>\n                <Button\n                  type=\"primary\"\n                  style={{ width: \"98%\", margin: \"0.5rem\" }}\n                  onClick={handleEditSubmission}\n                >\n                  {t(\"common.save\")}\n                </Button>\n              </Col>\n            </Row>\n          ) : (\n            <></>\n          )\n        }\n      >\n        <Card style={{ width: \"300px\", margin: \"auto 1rem\" }}>\n          <Row\n            justify=\"end\"\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"5px\",\n              zIndex: 2,\n            }}\n          >\n            {id && (\n              <Button\n                icon={<CheckOutlined color=\"green\" />}\n                style={{\n                  margin: \"0 0.2rem 0.5rem 0.2rem\",\n                  border: \"1px solid green\",\n                  borderRadius: \"50%\",\n                  background: \"transparent\",\n                }}\n                onClick={() => handleEdit(id ?? \"\")}\n              />\n            )}\n            <Button\n              icon={<DeleteOutlined style={{ color: \"red\" }} />}\n              style={{\n                margin: \"0 0.2rem 0.5rem 0.2rem\",\n                borderColor: \"red\",\n                border: \"1px solid red\",\n                borderRadius: \"50%\",\n                background: \"transparent\",\n              }}\n              onClick={() => setIsDeleteVisible(true)}\n            />\n          </Row>\n          <ReactPlayer\n            url={id ? url : filePath}\n            controls={true}\n            width=\"100%\"\n            style={{ aspectRatio: \"3/2\", objectFit: \"contain\" }}\n          />\n\n          <BaseButtonsForm.Item name=\"title\" initialValue={title}>\n            <Input disabled={isDisable} placeholder=\"Title\" />\n          </BaseButtonsForm.Item>\n          <BaseButtonsForm.Item name=\"description\" initialValue={description}>\n            <TextArea disabled={isDisable} placeholder=\"Description\" />\n          </BaseButtonsForm.Item>\n        </Card>\n        <div>\n          <Modal\n            title={t(\"common.DeleteModal\")}\n            centered\n            visible={isDeleteVisible}\n            onOk={() => {\n              setIsLoading(true);\n\n              if (id) {\n                deleteAttachmentMutation\n                  .mutateAsync(id)\n                  .then(() => {\n                    message.success(\"Attachment deleted successfully\");\n                  })\n                  .catch((error) => {\n                    message.error(`Error deleting attachment: ${error}`);\n                  })\n                  .finally(() => setIsLoading(false));\n              } else {\n                onDelete?.(uid!);\n              }\n              setIsDeleteVisible(false);\n            }}\n            onCancel={() => setIsDeleteVisible(false)}\n            size=\"small\"\n          >\n            <p>{t(\"modals.deleteEnsureMessage\")}</p>\n          </Modal>\n        </div>\n      </BaseButtonsForm>\n    </Spinner>\n  );\n};\n\nexport default UploadVideoCard;\n","import { Row, Card, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Button } from \"@app/components/common/buttons/Button/Button\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport UploadComponent from \"@app/pages/managmentPages/UploadedCards/UploadComponent\";\nimport UploadVideoCard from \"../UploadedCards/UploadVideoCard\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner.styles\";\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface VideoFormProps {\n  videosList: any;\n  newVideosList: any;\n  setNewVideosList: any;\n  loading?: boolean;\n  handleUploadVideos: any;\n  handeSubmissionVideos: any;\n  handleDeleteVideoCard: any;\n  onFinish: any;\n}\n\nconst VideoForm = ({\n  handeSubmissionVideos,\n  handleUploadVideos,\n  setNewVideosList,\n  newVideosList,\n  onFinish,\n  handleDeleteVideoCard,\n  videosList,\n  loading,\n}: VideoFormProps) => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const [form] = BaseForm.useForm();\n\n  const handleChildData = (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => {\n    setNewVideosList((prevList: any) => {\n      const updatedList = [...prevList];\n      updatedList[index] = { ...updatedList[index], ...data };\n      return updatedList;\n    });\n  };\n\n  return (\n    <Spinner spinning={loading}>\n      <BaseButtonsForm\n        form={form}\n        {...formItemLayout}\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        name=\"videosForm\"\n        initialValues={{}}\n        footer={\n          <BaseButtonsForm.Item style={{ marginTop: \"0.5rem\" }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={isLoading}\n              disabled={newVideosList.length === 0}\n            >\n              {t(\"common.submit\")}\n            </Button>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={handeSubmissionVideos}\n      >\n        <Row align=\"middle\" justify=\"space-between\">\n          <Typography.Title>Videos</Typography.Title>\n          <UploadComponent\n            // allowedTypes={[\"jpg\", \"png\", \"gif\"]}\n            label=\"Click to upload Video\"\n            onChange={handleUploadVideos}\n            fileList={newVideosList}\n          />\n        </Row>\n        {newVideosList.length > 0 || videosList.length > 0 ? (\n          <Card style={{ background: \"var(--shadow-color)\" }}>\n            <Row gutter={[10, 20]}>\n              {newVideosList?.length > 0\n                ? newVideosList?.map((item: any, index: number) => {\n                    return (\n                      <UploadVideoCard\n                        filePath={item?.url}\n                        onFinish={onFinish}\n                        onDelete={handleDeleteVideoCard}\n                        uid={item?.uid}\n                        index={index}\n                        getChildData={handleChildData}\n                      />\n                    );\n                  })\n                : null}\n              {videosList?.length > 0\n                ? videosList?.map((item: any) => {\n                    return (\n                      <UploadVideoCard\n                        title={item?.title}\n                        filePath={item?.filePath}\n                        description={item?.description}\n                        id={item?._id}\n                      />\n                    );\n                  })\n                : null}\n            </Row>\n          </Card>\n        ) : (\n          <Row justify=\"center\">\n            <Typography.Paragraph>No Uploaded Videos Yet</Typography.Paragraph>\n          </Row>\n        )}\n      </BaseButtonsForm>\n    </Spinner>\n  );\n};\n\nexport default VideoForm;\n","import { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport React, { useState } from \"react\";\nimport { Card } from \"@app/components/common/Card/Card\";\nimport { Button, Col, Image, Input, message, Row } from \"antd\";\nimport { CheckOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { useTranslation } from \"react-i18next\";\nimport { TextArea } from \"@app/components/common/inputs/Input/Input\";\nimport { useMutation } from \"react-query\";\nimport {\n  DeleteAttachment,\n  EditAttachment,\n  UploadAttachment,\n} from \"@app/api/files\";\nimport { useParams } from \"react-router-dom\";\nimport PdfImg from \"@app/assets/images/login-bg.webp\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner.styles\";\nimport { Modal } from \"@app/components/common/Modal/Modal\";\n\ninterface UploadFileCardProps {\n  title?: string;\n  filePath: string;\n  description?: string;\n  id?: string;\n  onFinish?: any;\n  // cardLabel?: string;\n  onDelete?: (attachmentId: string) => void; // Add a callback function\n  uid?: string;\n  type?: string;\n  index?: number;\n  getChildData?: (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => void;\n}\nconst UploadFilesCard = ({\n  title,\n  filePath,\n  description,\n  id,\n  // cardLabel,\n  onFinish,\n  onDelete,\n  uid,\n  type,\n  getChildData,\n  index,\n}: UploadFileCardProps) => {\n  const { t } = useTranslation();\n\n  const url = `https://eabir-backend.onrender.com${filePath}`;\n  const [form] = BaseForm.useForm();\n\n  const [isDisable, setIsDisable] = useState<boolean>(!!id);\n  const [isFieldsChanged, setIsFieldsChanged] = useState<boolean>(false);\n  const [fileId, setFileId] = useState<string>(\"\");\n  const [isDeleteVisible, setIsDeleteVisible] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const deleteAttachmentMutation = useMutation((id: string) =>\n    DeleteAttachment(id)\n  );\n  const editAttachmentMutation = useMutation(\n    ({\n      id,\n      title,\n      description,\n    }: {\n      id: string;\n      title: string;\n      description?: string;\n    }) => EditAttachment(id, title, description),\n    {\n      onSuccess: () => {\n        setIsFieldsChanged(false);\n        setIsDisable(true);\n        message.success(\"Attachment edited successfully\");\n      },\n      onError: (error) => {\n        console.error(\"Error editing attachment:\", error);\n        message.error(\"Error editing attachment\");\n      },\n    }\n  );\n\n  const handleEdit = (id: string) => {\n    setIsFieldsChanged(true);\n    setFileId(id);\n    setIsDisable(false);\n  };\n\n  const handleEditSubmission = () => {\n    const { title, description } = form.getFieldsValue();\n    if (fileId) {\n      editAttachmentMutation.mutateAsync({ id: fileId, title, description });\n    }\n  };\n\n  const handleDelete = (id: any, uid: any) => {\n    if (id) {\n      deleteAttachmentMutation\n        .mutateAsync(id)\n        .then(() => {\n          message.success(\"Attachment deleted successfully\");\n        })\n        .catch((error) => {\n          message.error(\"Error deleting attachment:\", error);\n        });\n    } else {\n      onDelete?.(uid);\n    }\n  };\n\n  const handleFieldChange = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        getChildData?.(index!, values);\n      })\n      .catch((error) => {\n        console.error(\"Validation failed:\", error);\n      });\n  };\n\n  return (\n    // <Spinner spinning={isLoading}>\n    <BaseButtonsForm\n      isFieldsChanged={isFieldsChanged}\n      form={form}\n      initialValues={{ title, description }}\n      onFieldsChange={handleFieldChange}\n      style={{ width: \"98%\" }}\n      footer={\n        fileId ? (\n          <Row justify=\"space-evenly\" style={{ width: \"90%\", margin: \"auto\" }}>\n            <Button\n              type=\"primary\"\n              style={{ width: \"50%\", margin: \"0.5rem\" }}\n              onClick={handleEditSubmission}\n            >\n              {t(\"common.save\")}\n            </Button>\n            <Button\n              type=\"default\"\n              style={{ width: \"50%\", margin: \"0.5rem\" }}\n              onClick={() => setIsDisable(true)}\n            >\n              {t(\"common.cancel\")}\n            </Button>\n          </Row>\n        ) : (\n          <></>\n        )\n      }\n    >\n      <Card\n        style={{\n          width: \"100%\",\n          margin: \"auto 1rem\",\n          display: \"flex\",\n        }}\n      >\n        <Row align=\"top\" justify=\"space-between\">\n          <Col span={4}>\n            <Link to={fileId ? url : filePath} target=\"_blank\">\n              <Image\n                src={PdfImg}\n                alt=\"pdf-img\"\n                width={150}\n                height={150}\n                preview={false}\n              />\n            </Link>\n          </Col>\n\n          <Col span={16}>\n            <BaseButtonsForm.Item name=\"title\" initialValue={title}>\n              <Input placeholder=\"Title\" disabled={isDisable} />\n            </BaseButtonsForm.Item>\n            <BaseButtonsForm.Item name=\"description\" initialValue={description}>\n              <TextArea placeholder=\"Description\" disabled={isDisable} />\n            </BaseButtonsForm.Item>\n          </Col>\n          <Col span={2}>\n            {id && (\n              <Button\n                icon={<CheckOutlined color=\"green\" />}\n                style={{\n                  margin: \"0 0.2rem 0.5rem 0.2rem\",\n                  border: \"1px solid green\",\n                  borderRadius: \"50%\",\n                  background: \"transparent\",\n                }}\n                onClick={() => handleEdit(id ?? \"\")}\n              />\n            )}\n            <Button\n              icon={<DeleteOutlined style={{ color: \"red\" }} />}\n              style={{\n                margin: \"0 0.2rem 0.5rem 0.2rem\",\n                borderColor: \"red\",\n                border: \"1px solid red\",\n                borderRadius: \"50%\",\n                background: \"transparent\",\n              }}\n              onClick={() => setIsDeleteVisible(true)}\n            />\n          </Col>\n        </Row>\n      </Card>\n      <div>\n        <Modal\n          title={t(\"common.DeleteModal\")}\n          centered\n          visible={isDeleteVisible}\n          onOk={() => {\n            setIsLoading(true);\n\n            if (id) {\n              deleteAttachmentMutation\n                .mutateAsync(id)\n                .then(() => {\n                  message.success(\"Attachment deleted successfully\");\n                })\n                .catch((error) => {\n                  message.error(`Error deleting attachment: ${error}`);\n                })\n                .finally(() => setIsLoading(false));\n            } else {\n              onDelete?.(uid!);\n            }\n            setIsDeleteVisible(false);\n          }}\n          onCancel={() => setIsDeleteVisible(false)}\n          size=\"small\"\n        >\n          <p>{t(\"modals.deleteEnsureMessage\")}</p>\n        </Modal>\n      </div>\n    </BaseButtonsForm>\n    // </Spinner>\n  );\n};\n\nexport default UploadFilesCard;\n","import React from \"react\";\nimport { Row, Card, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { BaseButtonsForm } from \"@app/components/common/forms/BaseButtonsForm/BaseButtonsForm\";\nimport { Button } from \"@app/components/common/buttons/Button/Button\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport UploadComponent from \"@app/pages/managmentPages/UploadedCards/UploadComponent\";\nimport UploadFilesCard from \"../UploadedCards/UploadFileCard\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner\";\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface FilesFormProps {\n  handeSubmissionFiles: any;\n  handleUploadFiles: any;\n  setNewFilesList: any;\n  newFilesList: any;\n  onFinish: any;\n  filesList: any;\n  handleDeleteFileCard: any;\n  loading: boolean;\n}\n\nconst FilesForm = ({\n  handeSubmissionFiles,\n  filesList,\n  setNewFilesList,\n  handleUploadFiles,\n  newFilesList,\n  onFinish,\n  handleDeleteFileCard,\n  loading,\n}: FilesFormProps) => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const [form] = BaseForm.useForm();\n\n  const handleChildData = (\n    index: number,\n    data: { title?: string; description?: string }\n  ) => {\n    setNewFilesList((prevList: any) => {\n      const updatedList = [...prevList];\n      updatedList[index] = { ...updatedList[index], ...data };\n      return updatedList;\n    });\n  };\n\n  return (\n    <Spinner spinning={loading}>\n      <BaseButtonsForm\n        form={form}\n        {...formItemLayout}\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        name=\"fileForm\"\n        initialValues={{}}\n        footer={\n          <BaseButtonsForm.Item style={{ marginTop: \"0.5rem\" }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={isLoading}\n              disabled={newFilesList.length === 0}\n            >\n              {t(\"common.submit\")}\n            </Button>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={handeSubmissionFiles}\n      >\n        <Row align=\"middle\" justify=\"space-between\">\n          <Typography.Title>Files</Typography.Title>\n          <UploadComponent\n            // allowedTypes={[\"jpg\", \"png\", \"gif\"]}\n            label=\"Click to upload Files\"\n            onChange={handleUploadFiles}\n            fileList={newFilesList}\n          />\n        </Row>\n\n        {newFilesList.length > 0 || filesList.length > 0 ? (\n          <Card\n            style={{ background: \"var(--shadow-color)\", marginBottom: \"1rem\" }}\n          >\n            <Row gutter={[10, 20]}>\n              {newFilesList?.length > 0\n                ? newFilesList?.map((item: any, index: number) => {\n                    return (\n                      <UploadFilesCard\n                        filePath={item?.url}\n                        onFinish={onFinish}\n                        onDelete={handleDeleteFileCard}\n                        uid={item?.uid}\n                        index={index}\n                        getChildData={handleChildData}\n                      />\n                    );\n                  })\n                : null}\n              {filesList?.length > 0\n                ? filesList?.map((item: any) => {\n                    return (\n                      <UploadFilesCard\n                        title={item?.title}\n                        filePath={item?.filePath}\n                        description={item?.description}\n                        id={item?._id}\n                      />\n                    );\n                  })\n                : null}\n            </Row>\n          </Card>\n        ) : (\n          <Row justify=\"center\">\n            <Typography.Paragraph>No Uploaded Files Yet</Typography.Paragraph>\n          </Row>\n        )}\n      </BaseButtonsForm>\n    </Spinner>\n  );\n};\n\nexport default FilesForm;\n","import React, { useEffect, useState } from \"react\";\nimport { message, Alert, Divider, Col, Spin } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  GetAttachmentByPageId,\n  UploadAttachment,\n  DeleteAttachment,\n} from \"@app/api/files\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport { ImagesForm } from \"./UploadedForms/ImagesForm\";\nimport VideoForm from \"./UploadedForms/VideoForm\";\nimport FilesForm from \"./UploadedForms/FilesForm\";\nimport { PageTitle } from \"@app/components/common/PageTitle/PageTitle\";\nimport { Spinner } from \"@app/components/common/Spinner/Spinner.styles\";\n\nconst PageSettingPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { pageId } = useParams();\n  const [form] = BaseForm.useForm();\n\n  const [imagesList, setImagesList] = useState<any[]>([]);\n  const [videosList, setVideosList] = useState<any[]>([]);\n  const [filesList, setFilesList] = useState<any[]>([]);\n\n  const [newImagesList, setNewImagesList] = useState<any[]>([]);\n  const [newVideosList, setNewVideosList] = useState<any[]>([]);\n  const [newFilesList, setNewFilesList] = useState<any[]>([]);\n\n  const [isLoading, setLoading] = useState(false);\n  const [isEditing, setEditing] = useState(false);\n  const [isDeleting, setDeleting] = useState(false);\n\n  const { data: attachmentByPageId, refetch } = useQuery(\n    [\"attachments\", pageId],\n    () => GetAttachmentByPageId(pageId ?? \"\"),\n    {\n      onSuccess: (data) => {\n        const response = data?.data?.data || [];\n\n        const images = response.filter((item: any) =>\n          item.fileType.includes(\"image\")\n        );\n        const videos = response.filter((item: any) =>\n          item.fileType.includes(\"video\")\n        );\n        const files = response.filter((item: any) =>\n          item.fileType.includes(\"application\")\n        );\n        setImagesList(images);\n        setVideosList(videos);\n        setFilesList(files);\n      },\n      onError: (error: any) => {\n        message.error(error.message || \"Error fetching attachments\");\n      },\n      onSettled: () => setLoading(false),\n    }\n  );\n\n  const uploadAttachment = useMutation(\n    (data: FormData) => UploadAttachment(data),\n    {\n      onSuccess: () => {\n        message.success(t(\"Pagess.editPagesSuccessMessage\"));\n        refetch();\n      },\n      onError: (error: any) => {\n        message.error(error.message || \"Error uploading file\");\n      },\n    }\n  );\n\n  const handleFileUpload =\n    (\n      type: \"image\" | \"video\" | \"application\",\n      setNewList: React.Dispatch<React.SetStateAction<any[]>>\n    ) =>\n    (info: any) => {\n      const { fileList } = info;\n      fileList.forEach((item: any, index: number) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const updatedItem = { ...item, url: reader.result };\n          if (item.type.includes(type)) {\n            setNewList((prevState) => {\n              const newList = [...prevState];\n              newList[index] = updatedItem;\n              return newList;\n            });\n          }\n        };\n        reader.readAsDataURL(item.originFileObj);\n      });\n      setLoading(false);\n    };\n\n  const handleSubmission =\n    (\n      list: any[],\n      setNewList: React.Dispatch<React.SetStateAction<any[]>>,\n      setLoading: React.Dispatch<React.SetStateAction<boolean>>\n    ) =>\n    () => {\n      if (list.length > 0) {\n        setLoading(true);\n\n        const promises = list.map((item) => {\n          const formData = new FormData();\n          formData.append(\"file\", item.originFileObj);\n          formData.append(\"title\", item.title || \"\");\n          formData.append(\"description\", item.description || \"\");\n          formData.append(\"pageId\", pageId ?? \"\");\n\n          return uploadAttachment.mutateAsync(formData); // Use mutateAsync to get a promise\n        });\n\n        Promise.all(promises)\n          .then(() => {\n            message.success(\"All files uploaded successfully\");\n          })\n          .catch((error) => {\n            message.error(error.message || \"Error uploading files\");\n          })\n          .finally(() => {\n            setLoading(false);\n            setNewList([]);\n          });\n      }\n    };\n\n  const handleDelete = (\n    type: \"image\" | \"video\" | \"application\",\n    uid: string\n  ) => {\n    setDeleting(true);\n    setTimeout(() => {\n      const setList =\n        type === \"image\"\n          ? setNewImagesList\n          : type === \"video\"\n          ? setNewVideosList\n          : setNewFilesList;\n      setList((prevList) => prevList.filter((item) => item.uid !== uid));\n      setDeleting(false);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <PageTitle>{t(\"common.pageManagment\")}</PageTitle>\n      <Col span={23} style={{ margin: \"1rem auto\" }}>\n        <ImagesForm\n          handeSubmissionImages={handleSubmission(\n            newImagesList,\n            setNewImagesList,\n            setLoading\n          )}\n          handleDeleteImageCard={(uid) => handleDelete(\"image\", uid)}\n          handleUploadImages={handleFileUpload(\"image\", setNewImagesList)}\n          imagesList={imagesList}\n          newImagesList={newImagesList}\n          onFinish={handleSubmission(\n            newImagesList,\n            setNewImagesList,\n            setLoading // Pass setLoading here\n          )}\n          loading={isLoading}\n          setNewImagesList={setNewImagesList}\n        />\n        <Divider />\n        <VideoForm\n          handeSubmissionVideos={handleSubmission(\n            newVideosList,\n            setNewVideosList,\n            setLoading // Pass setLoading here\n          )}\n          handleDeleteVideoCard={(uid: string) => handleDelete(\"video\", uid)}\n          handleUploadVideos={handleFileUpload(\"video\", setNewVideosList)}\n          newVideosList={newVideosList}\n          videosList={videosList}\n          loading={isLoading}\n          setNewVideosList={setNewVideosList}\n          onFinish={handleSubmission(\n            newVideosList,\n            setNewVideosList,\n            setLoading\n          )}\n        />\n        <Divider />\n        <FilesForm\n          filesList={filesList}\n          newFilesList={newFilesList}\n          setNewFilesList={setNewFilesList}\n          handeSubmissionFiles={handleSubmission(\n            newFilesList,\n            setNewFilesList,\n            setLoading\n          )}\n          handleDeleteFileCard={(uid: string) =>\n            handleDelete(\"application\", uid)\n          }\n          handleUploadFiles={handleFileUpload(\"application\", setNewFilesList)}\n          onFinish={handleSubmission(newFilesList, setNewFilesList, setLoading)}\n          loading={isLoading}\n        />\n      </Col>\n    </>\n  );\n};\n\nexport default PageSettingPage;\n"],"sourceRoot":""}