{"version":3,"sources":["components/tables/Tables/Tables.styles.ts","components/common/Table/Table.styles.ts","components/common/Table/Table.less","components/common/Table/Table.tsx","components/forms/ControlForm/useResetFormOnCloseModal.ts","components/Modals/AddFormModal.tsx","components/forms/ControlForm/ControlForm.styles.ts","components/Modals/EditFormModal.tsx","components/common/Alert/Alert.styles.ts","components/common/Alert/Alert.tsx","components/tables/BasicTable/BasicTable.tsx","constants/Pages.ts","api/pages.ts","pages/managmentPages/PagesMangment.tsx"],"names":["styled","div","_templateObject","_taggedTemplateLiteral","Card","CommonCard","_templateObject2","Table","AntdTable","FONT_SIZE","xs","props","_jsx","S","useResetFormOnCloseModal","_ref","form","visible","prevVisibleRef","useRef","useEffect","current","prevVisible","resetFields","AddFormModal","onCancel","onCreate","BaseForm","useForm","t","useTranslation","Modal","title","onOk","submit","children","onFinish","PagesData","layout","name","Item","label","rules","required","message","Input","md","FONT_WEIGHT","semibold","ul","_templateObject3","li","_templateObject4","_templateObject5","AddUserButton","Button","_templateObject6","EditFormModal","onEdit","editedValues","initialValues","value","Alert","AntAlert","BasicTable","navigate","useNavigate","editmodaldata","setEditmodaldata","useState","undefined","deletedmodaldata","setDeletedmodaldata","tableData","setTableData","data","pagination","setPagination","pageSize","isAddVisible","setIsAddVisible","isEditVisible","setIsEditVisible","isDeleteVisible","setIsDeleteVisible","isEdit","setIsEdit","isDelete","setIsDelete","keyWord","setKeyWord","loading","setLoading","refetchOnAddPage","setRefetchOnAddPage","refetch","isRefetching","useQuery","_pagination$current","_pagination$pageSize","async","keyword","axios","get","concat","GetAllPages","then","_data$data","success","catch","err","_err$error","notificationController","error","AddPage","useMutation","post","CreatePage","_error$error","editPage","put","_id","UpdatePage","daletePage","id","delete","DeletePage","columns","dataIndex","width","render","substring","date","dayjs","format","index","record","_jsxs","Space","type","onClick","danger","_Fragment","htmlType","showAddModal","hideAddModal","mutateAsync","hideEditModal","handleEdit","_data$data2","open","content","showIcon","_error$error2","finally","centered","_tableData$data","length","handleDelete","size","dataSource","onChange","page","total","scroll","x","bordered","PagesManagmentPage","PageTitle","padding"],"mappings":"yKAG6BA,IAAOC,IAAGC,MAAAC,YAAA,mCAAhC,MAIMC,EAAOJ,YAAOK,IAAPL,CAAkBM,MAAAH,YAAA,kC,+CCH/B,MAAMI,EAAQP,YAAOQ,IAAPR,CAAiBE,MAAAC,YAAA,m0DAGrBM,IAAUC,GAUVD,IAAUC,GA4BVD,IAAUC,IC7CZ,Q,OCOR,MAAMH,EAAoCI,GACxCC,cAACC,EAAO,IAAKF,I,+CCLf,MAAMG,EAA2BC,IAAwE,IAAvE,KAAEC,EAAI,QAAEC,GAAmDF,EAClG,MAAMG,EAAiBC,mBACvBC,qBAAU,KACRF,EAAeG,QAAUJ,CAAO,GAC/B,CAACA,IACJ,MAAMK,EAAcJ,EAAeG,QAEnCD,qBAAU,MACHH,GAAWK,GACdN,EAAKO,aACP,GACC,CAACN,EAASD,EAAMM,GAAa,ECErBE,EAA4CT,IAIlD,IAJmD,QACxDE,EAAO,SACPQ,EAAQ,SACRC,GACDX,EACC,MAAOC,GAAQW,IAASC,WAClB,EAAEC,GAAMC,cAEdhB,EAAyB,CACvBE,OACAC,YAWF,OACEL,cAACmB,IAAK,CACJC,MAAOH,EAAE,WACTZ,QAASA,EACTgB,KAZSA,KACXjB,EAAKkB,QAAQ,EAYXT,SAAUA,EAASU,SAEnBvB,cAACe,IAAQ,CACPX,KAAMA,EACNoB,SAbYC,IAChBX,EAASW,EAAU,EAafC,OAAO,WACPC,KAAK,WAAUJ,SAEfvB,cAACe,IAASa,KAAI,CACZD,KAAK,OACLE,MAAOZ,EAAE,eACTa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAASf,EAAE,0BAA2BM,SAEhEvB,cAACiC,IAAK,SAGJ,E,gBCrDY7C,YAAO2B,IAASa,KAAhBxC,CAAqBE,MAAAC,YAAA,uEAE5BM,IAAUqC,GACRC,IAAYC,UAIXhD,IAAOC,IAAGK,MAAAH,YAAA,iFAEfM,IAAUqC,GACRC,IAAYC,UAGThD,IAAOiD,GAAEC,MAAA/C,YAAA,oCAILH,IAAOmD,GAAEC,MAAAjD,YAAA,8EAMbH,IAAOC,IAAGoD,MAAAlD,YAAA,6GAEfM,IAAUqC,GACRC,IAAYC,UA1BtB,MA8BMM,EAAgBtD,YAAOuD,IAAPvD,CAAcwD,MAAArD,YAAA,2CCpB9BsD,EAA8C1C,IAKpD,IALqD,QAC1DE,EAAO,SACPQ,EAAQ,OACRiC,EAAM,aACNC,GACD5C,EACC,MAAOC,GAAQW,IAASC,WAClB,EAAEC,GAAMC,cAEdhB,EAAyB,CACvBE,OACAC,YAUF,OACEL,cAACmB,IAAK,CACJC,MAAOH,EAAE,WACTZ,QAASA,EACTgB,KAXSA,KACXjB,EAAKkB,QAAQ,EAWXT,SAAUA,EAASU,SAEnBvB,cAACe,IAAQ,CACPX,KAAMA,EACNoB,SAZYC,IAChBqB,EAAOrB,EAAU,EAYbC,OAAO,WACPC,KAAK,WACLqB,cAAeD,EAAaxB,SAE5BvB,cAACe,IAASa,KAAI,CACZD,KAAK,OACLE,MAAOZ,EAAE,eACTa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAASf,EAAE,0BAA2BM,SAEhEvB,cAACiC,IAAK,CAACgB,MAAmB,OAAZF,QAAY,IAAZA,OAAY,EAAZA,EAAcpB,YAG1B,E,yCCvDL,MAAMuB,EAAQ9D,YAAO+D,IAAP/D,CAAgBE,MAAAC,YAAA,2FCCxB2D,EAA+BnD,GACnCC,cAACC,EAAO,IAAKF,I,uDCoBf,MAAMqD,EAAuBA,KAClC,MAAM,EAAEnC,GAAMC,cACRmC,EAAWC,eACVC,EAAeC,GAAoBC,wBACxCC,IAEKC,EAAkBC,GAAuBH,wBAE9CC,IACKG,EAAWC,GAAgBL,mBAAqC,CACrEM,KAAM,MAEDC,EAAYC,GAAiBR,mBAAqB,CACvDhD,QCrC8B,EDsC9ByD,SCvCgC,MDyC3BC,EAAcC,GAAmBX,oBAAkB,IACnDY,EAAeC,GAAoBb,oBAAkB,IACrDc,EAAiBC,GAAsBf,oBAAkB,IACzDgB,EAAQC,GAAajB,oBAAkB,IACvCkB,EAAUC,GAAenB,oBAAkB,IAC3CoB,EAASC,GAAcrB,mBAAiB,KACxCsB,EAASC,GAAcvB,oBAAS,IAChCwB,EAAkBC,GAAuBzB,oBAAS,IAenD,QAAE0B,EAAO,aAAEC,GAAiBC,mBAChC,CACE,QACArB,EAAWvD,QACXuD,EAAWE,SACXS,EACAF,EACAQ,IAEF,SAAAK,EAAAC,EAAA,MEhDgBC,OAClB/E,EACAyD,EACAuB,UAKaC,IAAMC,IAAI,wDAADC,OACoCnF,EAAO,WAAAmF,OAAU1B,EAAQ,aAAA0B,OAAYH,IFwC3FI,CAA8B,QAAnBP,EAACtB,EAAWvD,eAAO,IAAA6E,IAAI,EAAsB,QAArBC,EAAEvB,EAAWE,gBAAQ,IAAAqB,IAAI,GAAIV,GAC7DiB,MAAM/B,IAAU,IAADgC,EACdjC,EAAiB,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MACnBiB,EAAoB,QAAVe,EAAChC,EAAKA,YAAI,IAAAgC,OAAA,EAATA,EAAWC,QAAQ,IAE/BC,OAAOC,IAAS,IAADC,EACdnB,GAAW,GACXoB,IAAuBC,MAAM,CAC3BrE,SAAY,OAAHkE,QAAG,IAAHA,OAAG,EAAHA,EAAKlE,WAAoB,QAAbmE,EAAID,EAAIG,aAAK,IAAAF,OAAA,EAATA,EAAWnE,UACpC,GACF,IAOFsE,EAAUC,uBAAaxC,GErDZyB,gBAIJE,IAAMc,KAAK,kDAAmD,CACzE7E,KAAMA,IFiDN8E,CAAW1C,EAAKpC,MACbmE,MAAK,KACJM,IAAuBJ,QAAQ,CAC7BhE,QAASf,EAAE,mCAEbmD,GAAgB,GAChBc,GAAoB,EAAK,IAE1Be,OAAOI,IAAW,IAADK,EAChBN,IAAuBC,MAAM,CAC3BrE,QAASqE,EAAMrE,UAAsB,QAAf0E,EAAIL,EAAMA,aAAK,IAAAK,OAAA,EAAXA,EAAa1E,UACvC,MAIF2E,EAAWJ,uBAAaxC,GE5DbyB,gBAIJE,IAAMkB,IAAI,mDAADhB,OACmC,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,KACzD,CAAElF,KAAU,OAAJoC,QAAI,IAAJA,OAAI,EAAJA,EAAMpC,OFsDmCmF,CAAW/C,KAkCxDgD,EAAaR,uBAAaS,GEpFfxB,gBAEJE,IAAMuB,OAAO,mDAADrB,OAC4BoB,IFiFNE,CAAWF,KAepDG,EAAU,CACd,CACE/F,MAAOH,EAAE,aACTmG,UAAW,MACXC,MAAO,KACPC,OAASN,GAAehH,cAAA,QAAAuB,SAAS,OAAFyF,QAAE,IAAFA,OAAE,EAAFA,EAAIO,UAAU,EAAG,MAElD,CACEnG,MAAOH,EAAE,eACTmG,UAAW,OACXE,OAAS3F,GAAiB3B,cAAA,QAAAuB,SAAOI,KAEnC,CACEP,MAAOH,EAAE,oBACTmG,UAAW,YACXC,MAAO,MACPC,OAASE,GAAiBxH,cAAA,QAAAuB,SAAOkG,IAAMD,GAAME,OAAO,iBAEtD,CACEtG,MAAOH,EAAE,oBACTmG,UAAW,YACXC,MAAO,MACPC,OAASE,GAAiBxH,cAAA,QAAAuB,SAAOkG,IAAMD,GAAME,OAAO,iBAGtD,CACEtG,MAAOH,EAAE,kBACTmG,UAAW,UACXC,MAAO,MACPC,OAAQA,CAACK,EAAeC,IAEpBC,eAACC,IAAK,CAAAvG,SAAA,CACJvB,cAAC2C,IAAM,CACLoF,KAAK,QACLC,QAASA,KApInB1D,GAAiB,GAsILd,EAAiBoE,EAAO,EACxBrG,SAEDN,EAAE,iBAELjB,cAAC2C,IAAM,CACLoF,KAAK,UACLE,QAAM,EACND,QAASA,KACPxD,GAAmB,GACnBZ,EAAoBgE,EAAO,EAC3BrG,SAEDN,EAAE,mBAELjB,cAAC2C,IAAM,CAACoF,KAAK,UAAUC,QAASA,IAAM3E,EAAS,IAADuC,OAAW,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQf,MAAOtF,SAC/DN,EAAE,yBAQf,OACE4G,eAAAK,WAAA,CAAA3G,SAAA,CACEvB,cAACC,EAAe,CAAC8H,KAAK,UAAUI,SAAS,SAASH,QAvKjCI,KACnBhE,GAAgB,EAAK,EAsKqD7C,SACrEN,EAAE,gBAELjB,cAACY,EAAY,CACXP,QAAS8D,EACTtD,SAzKewH,KACnBjE,GAAgB,EAAM,EAyKlBtD,SAAWiD,IACTuC,EAAQgC,YAAYvE,EAAK,IAG7B/D,cAAC6C,EAAa,CACZxC,QAASgE,EACTxD,SA1KgB0H,KACpBjE,GAAiB,EAAM,EA0KnBxB,OAASiB,QACWL,IAAlBH,GA3HWiF,EAACzE,EAAkB8C,KACpCF,EACG2B,YAAY,IAAKvE,EAAM8C,QACvBf,MAAM/B,IAAU,IAAD0E,EACd/D,EAAmB,QAAV+D,EAAC1E,EAAKA,YAAI,IAAA0E,OAAA,EAATA,EAAWzC,SACrBhB,GAAW,GACXhD,IAAQ0G,KAAK,CACXC,QACE3I,cAACkD,EAAK,CACJlB,QAASf,EAAE,kCACX8G,KAAI,UACJa,UAAQ,KAGZ,IAEH3C,OAAOI,IAAW,IAADwC,EAChB7G,IAAQ0G,KAAK,CACXC,QACE3I,cAACkD,EAAK,CACJlB,SAAoB,QAAX6G,EAAAxC,EAAMA,aAAK,IAAAwC,OAAA,EAAXA,EAAa7G,UAAWqE,EAAMrE,QACvC+F,KAAI,QACJa,UAAQ,KAGZ,IAEHE,SAAQ,KACP9D,GAAW,EAAM,GACjB,EA8FiCwD,CAAWzE,EAAMR,EAAcsD,KAEhE9D,aAAcQ,IAEhBvD,cAAA,OAAAuB,SACEvB,cAACmB,IAAK,CACJC,MAAOH,EAAE,sBACT8H,UAAQ,EACR1I,QAASkE,EACTlD,KAAMA,MACY,OAAhBsC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkD,MAnGNG,KACK,IAADgC,EAApBhF,EAAWvD,UACTuD,EAAWvD,QAAU,GAAiC,KAAnB,OAAToD,QAAS,IAATA,GAAe,QAANmF,EAATnF,EAAWE,YAAI,IAAAiF,OAAN,EAATA,EAAiBC,SAC7ClC,EAAWuB,YAAYtB,GACvB/C,EAAc,IAAKD,EAAYvD,QAASuD,EAAWvD,QAAU,IAC7DuE,GAAW,KAEX+B,EAAWuB,YAAYtB,GACvBhC,GAAW,IAEf,EAyFiCkE,CAA6B,OAAhBvF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkD,KACxDrC,GAAmB,GACnBI,GAAY,EAAK,EAEnB/D,SAAUA,IAAM2D,GAAmB,GACnC2E,KAAK,QAAO5H,SAEZvB,cAAA,KAAAuB,SAAIN,EAAE,oCAGVjB,cAACL,EAAK,CACJwH,QAASA,EACTiC,WAAYvF,EAAUE,KACtBC,WAAY,CACVvD,QAASuD,EAAWvD,QACpByD,SAAUF,EAAWE,SACrBmF,SAAUA,CAACC,EAAcpF,KACvBD,EAAc,CACZxD,QAAS6I,EACTpF,SAAUA,GACV,EAEJqF,MAAO,IAITC,OAAQ,CAAEC,EAAG,KACbC,UAAQ,EACR3E,QAASA,MAEV,EGzPQ4E,UAjBYA,KACzB,MAAM,EAAE1I,GAAMC,cAEd,OACE2G,eAAAK,WAAA,CAAA3G,SAAA,CACEvB,cAAC4J,IAAS,CAAArI,SAAEN,EAAE,4BACdjB,cAACC,EAAM,CACL+G,GAAG,iBACH5F,MAAOH,EAAE,0BACT4I,QAAQ,oBAAmBtI,SAE3BvB,cAACoD,EAAU,QAEZ,C","file":"static/js/28.09c62501.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Card as CommonCard } from \"components/common/Card/Card\";\n\nexport const TablesWrapper = styled.div`\n  margin-top: 1.875rem;\n`;\n\nexport const Card = styled(CommonCard)`\n  margin-bottom: 2rem;\n`;\n","import styled from 'styled-components';\nimport { Table as AntdTable } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\nexport const Table = styled(AntdTable)`\n  & thead .ant-table-cell {\n    color: var(--primary-color);\n    font-size: ${FONT_SIZE.xs};\n    line-height: 1.25rem;\n\n    & .anticon {\n      color: var(--primary-color);\n    }\n  }\n\n  & tbody .ant-table-cell {\n    color: var(--text-main-color);\n    font-size: ${FONT_SIZE.xs};\n    line-height: 1.25rem;\n  }\n\n  & tbody .ant-table-row-expand-icon {\n    min-height: 1.25rem;\n    min-width: 1.25rem;\n    border-radius: 0.1875rem;\n    margin-top: 0;\n  }\n\n  // Override default antd selector\n  &\n    .ant-table-thead\n    > tr\n    > th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\n    background-color: var(--primary-color);\n  }\n\n  & .ant-pagination-prev,\n  .ant-pagination-next,\n  .ant-pagination-jump-prev,\n  .ant-pagination-jump-next,\n  .ant-pagination-item {\n    min-width: 2.0625rem;\n    height: 2.0625rem;\n    line-height: 2.0625rem;\n    border-radius: 0;\n    font-size: ${FONT_SIZE.xs};\n  }\n\n  & .ant-pagination-prev .ant-pagination-item-link,\n  .ant-pagination-next .ant-pagination-item-link {\n    border-radius: 0;\n  }\n\n  & .ant-checkbox-inner {\n    border-radius: 0.1875rem;\n    height: 1.25rem;\n    width: 1.25rem;\n    border: 1px solid var(--primary-color);\n  }\n\n  & .editable-row .ant-form-item-explain {\n    position: absolute;\n    top: 100%;\n    font-size: 0.75rem;\n  }\n\n  .ant-table-column-sort {\n    background-color: transparent;\n  }\n\n  .ant-pagination-item-container .ant-pagination-item-ellipsis {\n    color: var(--disabled-color);\n  }\n\n  .ant-pagination-disabled {\n    .ant-pagination-item-link,\n    .ant-pagination-item a {\n      color: var(--disabled-color);\n    }\n  }\n\n  .ant-pagination.ant-pagination-disabled {\n    .ant-pagination-item-link,\n    .ant-pagination-item a {\n      color: var(--disabled-color);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Table.2a1d53da.less\";","/* eslint-disable */\nimport React from \"react\";\nimport { TableProps } from \"antd\";\nimport * as S from \"./Table.styles\";\nimport \"./Table.less\";\n\n// TODO make generic!\nexport const Table: React.FC<TableProps<any>> = (props) => {\n  return <S.Table {...props} />;\n};\n","import { useEffect, useRef } from 'react';\nimport { FormInstance } from 'antd';\n\nexport const useResetFormOnCloseModal = ({ form, visible }: { form: FormInstance; visible: boolean }): void => {\n  const prevVisibleRef = useRef<boolean>();\n  useEffect(() => {\n    prevVisibleRef.current = visible;\n  }, [visible]);\n  const prevVisible = prevVisibleRef.current;\n\n  useEffect(() => {\n    if (!visible && prevVisible) {\n      form.resetFields();\n    }\n  }, [visible, form, prevVisible]);\n};\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport { Input } from \"@app/components/common/inputs/Input/Input\";\nimport { InputNumber } from \"@app/components/common/inputs/InputNumber/InputNumber\";\nimport { useResetFormOnCloseModal } from \"../forms/ControlForm/useResetFormOnCloseModal\";\nimport { Select } from \"@app/components/common/selects/Select/Select.styles\";\nimport { PagesModal } from \"@app/domain/NotesModal\";\n\ninterface AddFormModalProps {\n  visible: boolean;\n  onCancel: () => void;\n  onCreate: (data: PagesModal) => void;\n}\n\nexport const AddFormModal: React.FC<AddFormModalProps> = ({\n  visible,\n  onCancel,\n  onCreate,\n}) => {\n  const [form] = BaseForm.useForm();\n  const { t } = useTranslation();\n\n  useResetFormOnCloseModal({\n    form,\n    visible,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  const onFinish = (PagesData: PagesModal) => {\n    onCreate(PagesData);\n  };\n\n  return (\n    <Modal\n      title={t(\"Add New\")}\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <BaseForm\n        form={form}\n        onFinish={onFinish}\n        layout=\"vertical\"\n        name=\"userForm\"\n      >\n        <BaseForm.Item\n          name=\"name\"\n          label={t(\"common.name\")}\n          rules={[{ required: true, message: t(\"common.requiredField\") }]}\n        >\n          <Input />\n        </BaseForm.Item>\n      </BaseForm>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const UserList = styled(BaseForm.Item)`\n  & label {\n    font-size: ${FONT_SIZE.md};\n    font-weight: ${FONT_WEIGHT.semibold};\n  }\n`;\n\nexport const Text = styled.div`\n  color: var(--primary-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.8rem;\n`;\n\nexport const User = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-button: 0.5rem;\n`;\n\nexport const AddUserButton = styled(Button)`\n  margin: 0.5rem 0 0.5rem auto;\n`;\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { BaseForm } from \"@app/components/common/forms/BaseForm/BaseForm\";\nimport { Input } from \"@app/components/common/inputs/Input/Input\";\nimport { useResetFormOnCloseModal } from \"../forms/ControlForm/useResetFormOnCloseModal\";\nimport { PagesModal } from \"@app/domain/NotesModal\";\n\ninterface EditFormModalProps {\n  visible: boolean;\n  onCancel: () => void;\n  onEdit: (data: PagesModal) => void;\n  editedValues: PagesModal | undefined;\n}\n\nexport const EditFormModal: React.FC<EditFormModalProps> = ({\n  visible,\n  onCancel,\n  onEdit,\n  editedValues,\n}) => {\n  const [form] = BaseForm.useForm();\n  const { t } = useTranslation();\n\n  useResetFormOnCloseModal({\n    form,\n    visible,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  const onFinish = (PagesData: PagesModal) => {\n    onEdit(PagesData);\n  };\n  return (\n    <Modal\n      title={t(\"Add New\")}\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <BaseForm\n        form={form}\n        onFinish={onFinish}\n        layout=\"vertical\"\n        name=\"userForm\"\n        initialValues={editedValues}\n      >\n        <BaseForm.Item\n          name=\"name\"\n          label={t(\"common.name\")}\n          rules={[{ required: true, message: t(\"common.requiredField\") }]}\n        >\n          <Input value={editedValues?.name} />\n        </BaseForm.Item>\n      </BaseForm>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport { Alert as AntAlert } from 'antd';\n\nexport const Alert = styled(AntAlert)`\n  color: var(--black);\n\n  .ant-alert-message {\n    color: var(--black);\n  }\n`;\n","import React from 'react';\nimport { AlertProps } from 'antd';\nimport * as S from './Alert.styles';\n\nexport const Alert: React.FC<AlertProps> = (props) => {\n  return <S.Alert {...props} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { message, Space } from \"antd\";\nimport { Pagination } from \"@app/api/pages\";\nimport { Table } from \"components/common/Table/Table\";\nimport { Button } from \"components/common/buttons/Button/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { AddFormModal } from \"@app/components/Modals/AddFormModal\";\nimport * as S from \"@app/components/forms/ControlForm/ControlForm.styles\";\nimport { EditFormModal } from \"@app/components/Modals/EditFormModal\";\nimport { Modal } from \"@app/components/common/Modal/Modal\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { notificationController } from \"@app/controllers/notificationController\";\nimport { PagesModal } from \"@app/domain/NotesModal\";\nimport { Alert } from \"@app/components/common/Alert/Alert\";\nimport {\n  CreatePage,\n  DeletePage,\n  GetAllPages,\n  PagesTableData,\n  UpdatePage,\n} from \"@app/api/pages\";\nimport dayjs from \"dayjs\";\nimport { CURRENT_PAGINATION, PAGE_SIZE_PAGINATION } from \"@app/constants/Pages\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const BasicTable: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [editmodaldata, setEditmodaldata] = useState<PagesModal | undefined>(\n    undefined\n  );\n  const [deletedmodaldata, setDeletedmodaldata] = useState<\n    PagesModal | undefined\n  >(undefined);\n  const [tableData, setTableData] = useState<{ data: PagesTableData[] }>({\n    data: [],\n  });\n  const [pagination, setPagination] = useState<Pagination>({\n    current: CURRENT_PAGINATION,\n    pageSize: PAGE_SIZE_PAGINATION,\n  });\n  const [isAddVisible, setIsAddVisible] = useState<boolean>(false);\n  const [isEditVisible, setIsEditVisible] = useState<boolean>(false);\n  const [isDeleteVisible, setIsDeleteVisible] = useState<boolean>(false);\n  const [isEdit, setIsEdit] = useState<boolean>(false);\n  const [isDelete, setIsDelete] = useState<boolean>(false);\n  const [keyWord, setKeyWord] = useState<string>(\"\");\n  const [loading, setLoading] = useState(true);\n  const [refetchOnAddPage, setRefetchOnAddPage] = useState(false);\n\n  const showAddModal = () => {\n    setIsAddVisible(true);\n  };\n  const hideAddModal = () => {\n    setIsAddVisible(false);\n  };\n  const showEditModal = () => {\n    setIsEditVisible(true);\n  };\n  const hideEditModal = () => {\n    setIsEditVisible(false);\n  };\n\n  const { refetch, isRefetching } = useQuery(\n    [\n      \"pages\",\n      pagination.current,\n      pagination.pageSize,\n      isDelete,\n      isEdit,\n      refetchOnAddPage,\n    ],\n    () =>\n      GetAllPages(pagination.current ?? 1, pagination.pageSize ?? 10, keyWord)\n        .then((data) => {\n          setTableData(data?.data);\n          setLoading(data.data?.success);\n        })\n        .catch((err) => {\n          setLoading(false);\n          notificationController.error({\n            message: err?.message || err.error?.message,\n          });\n        })\n  );\n\n  // useEffect(() => {\n  //   refetch();\n  // }, [loading]);\n\n  const AddPage = useMutation((data: PagesModal) =>\n    CreatePage(data.name)\n      .then(() => {\n        notificationController.success({\n          message: t(\"Pagess.addPagesSuccessMessage\"),\n        });\n        setIsAddVisible(false);\n        setRefetchOnAddPage(true);\n      })\n      .catch((error) => {\n        notificationController.error({\n          message: error.message || error.error?.message,\n        });\n      })\n  );\n\n  const editPage = useMutation((data: PagesModal) => UpdatePage(data));\n\n  const handleEdit = (data: PagesModal, _id: string) => {\n    editPage\n      .mutateAsync({ ...data, _id })\n      .then((data) => {\n        setIsEdit(data.data?.success);\n        setLoading(true);\n        message.open({\n          content: (\n            <Alert\n              message={t(`Pagess.editPagesSuccessMessage`)}\n              type={`success`}\n              showIcon\n            />\n          ),\n        });\n      })\n      .catch((error) => {\n        message.open({\n          content: (\n            <Alert\n              message={error.error?.message || error.message}\n              type={`error`}\n              showIcon\n            />\n          ),\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const daletePage = useMutation((id: string) => DeletePage(id));\n\n  const handleDelete = (id: string) => {\n    if (pagination.current) {\n      if (pagination.current > 1 && tableData?.data?.length === 1) {\n        daletePage.mutateAsync(id);\n        setPagination({ ...pagination, current: pagination.current - 1 });\n        setLoading(true);\n      } else {\n        daletePage.mutateAsync(id);\n        setLoading(false);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: t(\"common.id\"),\n      dataIndex: \"_id\",\n      width: \"2%\",\n      render: (id: string) => <span>{id?.substring(0, 3)}</span>,\n    },\n    {\n      title: t(\"common.name\"),\n      dataIndex: \"name\",\n      render: (name: string) => <span>{name}</span>,\n    },\n    {\n      title: t(\"common.createdAt\"),\n      dataIndex: \"createdAt\",\n      width: \"10%\",\n      render: (date: string) => <span>{dayjs(date).format(\"YYYY-MM-DD\")}</span>,\n    },\n    {\n      title: t(\"common.updatedAt\"),\n      dataIndex: \"updatedAt\",\n      width: \"10%\",\n      render: (date: string) => <span>{dayjs(date).format(\"YYYY-MM-DD\")}</span>,\n    },\n\n    {\n      title: t(\"tables.actions\"),\n      dataIndex: \"actions\",\n      width: \"15%\",\n      render: (index: number, record: PagesModal) => {\n        return (\n          <Space>\n            <Button\n              type=\"ghost\"\n              onClick={() => {\n                showEditModal();\n                setEditmodaldata(record);\n              }}\n            >\n              {t(\"common.edit\")}\n            </Button>\n            <Button\n              type=\"default\"\n              danger\n              onClick={() => {\n                setIsDeleteVisible(true);\n                setDeletedmodaldata(record);\n              }}\n            >\n              {t(\"tables.delete\")}\n            </Button>\n            <Button type=\"default\" onClick={() => navigate(`/${record?._id}`)}>\n              {t(\"tables.setting\")}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <S.AddUserButton type=\"default\" htmlType=\"button\" onClick={showAddModal}>\n        {t(\"common.add\")}\n      </S.AddUserButton>\n      <AddFormModal\n        visible={isAddVisible}\n        onCancel={hideAddModal}\n        onCreate={(data: PagesModal) => {\n          AddPage.mutateAsync(data);\n        }}\n      />\n      <EditFormModal\n        visible={isEditVisible}\n        onCancel={hideEditModal}\n        onEdit={(data) =>\n          editmodaldata !== undefined && handleEdit(data, editmodaldata._id)\n        }\n        editedValues={editmodaldata}\n      />\n      <div>\n        <Modal\n          title={t(\"common.DeleteModal\")}\n          centered\n          visible={isDeleteVisible}\n          onOk={() => {\n            deletedmodaldata?._id && handleDelete(deletedmodaldata?._id);\n            setIsDeleteVisible(false);\n            setIsDelete(true);\n          }}\n          onCancel={() => setIsDeleteVisible(false)}\n          size=\"small\"\n        >\n          <p>{t(\"modals.deleteEnsureMessage\")}</p>\n        </Modal>\n      </div>\n      <Table\n        columns={columns}\n        dataSource={tableData.data}\n        pagination={{\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          onChange: (page: number, pageSize: number) => {\n            setPagination({\n              current: page,\n              pageSize: pageSize,\n            });\n          },\n          total: 20,\n        }}\n        // loading={tableData.loading}\n        // onChange={handleTableChange}\n        scroll={{ x: 800 }}\n        bordered\n        loading={loading}\n      />\n    </>\n  );\n};\n","export const PAGE_SIZE_PAGINATION = 10;\nexport const CURRENT_PAGINATION = 1;\n","import { PagesModal } from \"@app/domain/NotesModal\";\nimport { httpApi } from \"./http.api\";\nimport axios from \"axios\";\n\nexport interface PagesTableRow {\n  id: string;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Pagination {\n  current?: number;\n  pageSize?: number;\n  total?: number;\n}\n\nexport interface PagesTableData {\n  data: PagesTableRow[];\n  pagination: Pagination;\n}\n\nconst baseURL = `/pages`;\n\nconst GetAllPages = async (\n  current: number,\n  pageSize: number,\n  keyword?: string\n) => {\n  // return await httpApi.get(\n  //   `${baseURL}?page=${current}&limit=${pageSize}&keyword=${keyword}`\n  // );\n  return await axios.get(\n    `https://eabir-backend.onrender.com/api/v1/pages?page=${current}&limit=${pageSize}&keyword=${keyword}`\n  );\n};\n\nconst CreatePage = async (name: string) => {\n  // return await httpApi.post(`/files`, {\n  //   name: name,\n  // });\n  return await axios.post(\"https://eabir-backend.onrender.com/api/v1/pages\", {\n    name: name,\n  });\n};\n\nconst UpdatePage = async (data: PagesModal) => {\n  // return await httpApi.put(`/files/${data.id}`, {\n  //   name: data.name,\n  // });\n  return await axios.put(\n    `https://eabir-backend.onrender.com/api/v1/pages/${data?._id}`,\n    { name: data?.name }\n  );\n};\n\nconst DeletePage = async (id: string) => {\n  // return await httpApi.delete(`/files/${id}`);\n  return await axios.delete(\n    `https://eabir-backend.onrender.com/api/v1/pages/${id}`\n  );\n};\nexport { GetAllPages, CreatePage, UpdatePage, DeletePage };\n","import { PageTitle } from \"@app/components/common/PageTitle/PageTitle\";\nimport * as S from \"@app/components/tables/Tables/Tables.styles\";\nimport { BasicTable } from \"@app/components/tables/BasicTable/BasicTable\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PagesManagmentPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t(\"common.pages-managment\")}</PageTitle>\n      <S.Card\n        id=\"editable-table\"\n        title={t(\"common.pages-managment\")}\n        padding=\"1.25rem 1.25rem 0\"\n      >\n        <BasicTable />\n      </S.Card>\n    </>\n  );\n};\n\nexport default PagesManagmentPage;\n"],"sourceRoot":""}